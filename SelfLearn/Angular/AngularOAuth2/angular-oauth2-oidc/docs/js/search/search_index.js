var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.1.6","fields":["title","body"],"fieldVectors":[["title/classes/AbstractValidationHandler.html",[0,0.065,1,2.716]],["body/classes/AbstractValidationHandler.html",[0,0.071,1,2.419,2,0.402,3,0.458,4,0.429,5,3.232,6,3.92,7,1.236,8,1.538,9,1.567,10,1.22,11,1.866,12,2.419,13,1.297,14,3.285,15,2.211,16,0.825,17,2.419,18,3.64,19,0.518,20,4.133,21,3.563,22,2.935,23,2.681,24,2.168,25,4.433,26,0.727,27,2.333,28,2.681,29,1.967,30,1.841,31,2.037,32,1.449,33,0.023,34,1.461,35,0.779,36,1.142,37,2.681,38,1.852,39,2.681,40,1.645,41,2.333,42,2.681,43,3.64,44,2.681,45,1.872,46,2.681,47,2.681,48,1.443,49,2.037,50,2.681,51,3.886,52,2.333,53,1.711,54,3.538,55,2.935,56,1.294,57,1.548,58,1.732,59,1.458,60,2.419,61,2.333,62,2.471,63,2.087,64,0.478,65,1.132,66,1.075,67,1.075,68,1.075,69,1.075,70,1.584,71,1.756,72,1.236,73,0.888,74,0.585,75,1.757,76,1.584,77,2.681,78,1.756,79,1.756,80,1.756,81,1.756,82,1.756,83,0.621,84,1.756,85,1.756,86,1.756,87,1.334,88,2.681,89,1.756,90,3.64,91,1.756,92,1.756,93,1.756,94,1.756,95,3.64,96,1.756,97,1.756,98,1.756,99,1.756,100,1.756,101,1.756,102,1.756,103,0.945,104,1.756,105,1.334,106,1.756,107,1.756,108,0.011,109,0.011]],["title/interceptors/DefaultOAuthInterceptor.html",[110,3.01,111,2.716]],["body/interceptors/DefaultOAuthInterceptor.html",[0,0.051,2,0.537,3,0.611,4,0.573,10,0.692,13,1.041,19,0.692,24,1.051,26,0.662,32,1.32,33,0.023,34,1.173,35,0.824,36,1.313,38,2.112,49,3.179,59,1.051,64,0.345,72,1.65,74,1.105,75,2.523,108,0.014,109,0.014,110,2.344,111,2.993,112,5.114,113,3.115,114,3.848,115,2.174,116,3.115,117,2.252,118,4.351,119,3.179,120,4.351,121,3.179,122,3.115,123,3.75,124,2.65,125,4.731,126,4.184,127,4.731,128,3.115,129,4.351,130,3.173,131,2.435,132,2.924,133,1.781,134,0.99,135,2.734,136,2.115,137,2.65,138,3.316,139,2.115,140,2.65,141,1.781,142,2.115,143,3.115,144,3.115,145,2.115,146,0.829,147,1.186,148,2.344,149,4.184,150,2.65,151,3.78,152,3.316,153,2.65,154,2.65,155,1.116,156,2.65,157,2.65,158,4.731,159,2.65,160,2.65,161,2.65,162,2.734,163,2.65,164,3.75,165,2.344,166,3.115,167,2.65,168,3.115,169,3.115,170,2.65]],["title/classes/LoginOptions.html",[0,0.065,171,2.119]],["body/classes/LoginOptions.html",[0,0.072,2,0.542,3,0.39,4,0.366,8,0.858,9,1.181,10,0.442,11,1.59,13,0.743,16,0.903,19,0.442,24,2.403,26,0.839,29,1.842,30,1.198,33,0.023,35,0.779,36,1.419,40,1.329,45,0.632,48,1.274,53,1.448,56,1.54,57,0.712,58,0.712,59,1.497,63,0.858,64,0.596,65,1.411,66,1.45,67,0.916,68,0.916,69,0.916,73,1.198,74,1.4,83,1.181,108,0.01,109,0.01,117,0.805,134,1.634,146,0.837,147,1.198,171,1.667,172,1.137,173,0.529,174,1.989,175,2.069,176,1.577,177,2.352,178,2.537,179,2.537,180,2.19,181,1.989,182,1.198,183,2.725,184,2.574,185,1.799,186,1.198,187,1.358,188,1.274,189,1.667,190,1.989,191,1.181,192,1.667,193,1.061,194,2.228,195,2.19,196,1.667,197,1.799,198,1.667,199,1.667,200,1.799,201,1.329,202,1.799,203,2.537,204,1.799,205,2.94,206,1.989,207,1.329,208,1.799,209,1.274,210,1.799,211,2.94,212,1.798,213,1.989,214,1.667,215,1.989,216,1.799,217,2.562,218,2.537,219,1.137,220,0.981,221,1.137,222,0.757,223,0.858,224,1.054,225,0.916,226,0.858,227,1.054,228,1.137,229,0.712,230,1.137,231,1.137,232,0.981,233,2.764,234,0.981,235,0.805,236,1.137,237,1.054,238,1.137,239,1.137,240,1.137,241,1.799,242,1.799,243,1.45,244,1.799,245,1.799,246,1.552,247,1.137,248,1.054,249,1.137,250,1.137,251,1.137,252,0.757,253,0.671,254,1.137,255,0.981,256,1.137,257,0.981,258,0.712,259,0.712,260,0.712,261,1.137,262,0.916,263,1.137,264,1.137,265,1.137,266,1.137,267,1.137,268,1.137,269,1.137,270,1.137,271,1.137,272,1.137,273,1.137,274,1.137,275,1.137,276,1.137,277,1.137,278,1.137,279,1.137,280,1.137,281,1.137,282,1.137,283,1.137,284,1.137,285,1.137,286,1.137,287,1.137,288,1.137,289,1.137,290,1.137]],["title/classes/NullValidationHandler.html",[0,0.065,291,3.01]],["body/classes/NullValidationHandler.html",[0,0.086,2,0.698,3,0.795,4,0.746,5,3.633,7,2.147,8,1.748,10,1.171,11,2.097,13,1.244,14,3.578,16,0.792,19,0.9,22,3.578,26,0.792,32,1.578,33,0.023,34,1.402,35,0.849,36,1.244,38,2.091,51,4.266,53,2.077,59,1.777,60,3.578,63,2.274,64,0.448,72,3.102,76,3.578,83,1.078,108,0.017,109,0.017,131,1.542,291,3.965,292,5.855,293,4.482,294,5.269,295,3.269,296,5.269,297,4.052,298,4.052,299,4.052]],["title/classes/OAuthErrorEvent.html",[0,0.065,300,2.482]],["body/classes/OAuthErrorEvent.html",[0,0.102,2,0.964,3,0.725,4,0.68,9,0.983,26,0.555,32,1.107,33,0.023,34,0.983,35,1.005,36,0.872,40,1.923,58,2.004,64,0.69,108,0.016,109,0.016,115,2.445,229,2.004,300,3.076,301,2.292,302,4.06,303,3.869,304,3.799,305,4.069,306,3.799,307,3.695,308,2.292,309,2.292,310,2.292,311,2.292,312,2.292,313,2.292,314,2.292,315,2.292,316,2.292,317,2.292,318,2.292,319,2.292,320,2.292,321,2.292,322,2.292,323,2.292,324,2.112,325,2.292,326,2.292,327,2.112,328,1.823,329,2.509,330,2.292,331,4.06,332,3.799,333,2.292]],["title/classes/OAuthEvent.html",[0,0.065,303,2.482]],["body/classes/OAuthEvent.html",[0,0.103,2,0.977,3,0.744,4,0.698,9,1.009,26,0.57,32,1.135,33,0.024,34,1.009,35,1.013,36,0.895,40,1.51,58,1.357,64,0.696,108,0.016,109,0.016,115,2.487,229,2.029,300,2.352,301,2.352,302,3.848,303,3.902,304,3.848,305,4.095,306,2.574,308,2.352,309,2.352,310,2.352,311,2.352,312,2.352,313,2.352,314,2.352,315,2.352,316,2.352,317,2.352,318,2.352,319,2.352,320,2.352,321,2.352,322,2.352,323,2.352,324,2.167,325,2.352,326,2.352,327,2.167,328,1.87,329,2.574,330,2.352,331,4.102,332,3.848,333,2.352,334,3.79]],["title/classes/OAuthInfoEvent.html",[0,0.065,333,2.482]],["body/classes/OAuthInfoEvent.html",[0,0.102,2,1.08,3,0.736,4,0.69,9,0.998,26,0.564,32,1.124,33,0.024,34,0.998,35,1.01,36,0.886,40,1.5,58,1.344,64,0.693,108,0.016,109,0.016,115,2.47,229,2.019,300,2.328,301,2.328,302,4.085,303,3.889,304,3.828,305,4.085,306,2.548,308,2.328,309,2.328,310,2.328,311,2.328,312,2.328,313,2.328,314,2.328,315,2.328,316,2.328,317,2.328,318,2.328,319,2.328,320,2.328,321,2.328,322,2.328,323,2.328,324,2.145,325,2.328,326,2.328,327,2.145,328,1.851,329,2.548,330,2.328,331,4.085,332,3.828,333,3.107,335,3.751]],["title/modules/OAuthModule.html",[336,2.287,337,2.716]],["body/modules/OAuthModule.html",[0,0.06,2,0.629,3,0.716,4,0.672,33,0.024,35,0.588,38,1.658,64,0.615,72,1.933,83,0.971,108,0.016,109,0.016,111,3.338,117,1.991,119,2.81,121,3.178,131,2.591,133,2.086,134,1.562,135,3.449,136,2.478,141,2.086,146,0.971,147,1.389,148,2.746,151,2.264,155,1.307,205,2.086,226,2.121,229,1.761,336,2.086,337,3.775,338,3.104,339,3.104,340,4.73,341,4.916,342,4.916,343,3.104,344,4.916,345,3.649,346,3.699,347,3.649,348,3.05,349,3.649,350,3.649,351,3.649,352,4.182,353,3.649,354,3.649,355,2.746,356,3.649,357,3.649,358,3.649,359,2.425,360,3.649,361,3.649,362,2.68,363,3.649,364,4.182,365,3.649,366,3.649]],["title/classes/OAuthModuleConfig.html",[0,0.065,121,2.287]],["body/classes/OAuthModuleConfig.html",[0,0.102,2,0.807,3,0.919,4,0.862,9,1.537,16,0.704,19,1.041,26,0.704,33,0.023,35,0.755,57,1.678,59,1.58,64,0.639,83,1.247,108,0.018,109,0.018,114,3.525,121,3.302,155,1.678,162,3.584,176,1.631,191,1.247,207,1.403,367,4.914,368,3.986,369,4.44,370,4.92,371,4.685,372,3.986,373,2.907,374,2.482,375,3.181,376,3.181]],["title/classes/OAuthNoopResourceServerErrorHandler.html",[0,0.065,348,2.482]],["body/classes/OAuthNoopResourceServerErrorHandler.html",[0,0.1,2,0.773,3,0.88,4,0.825,7,2.376,9,1.496,10,1.249,13,1.327,19,0.996,26,0.674,32,1.343,33,0.023,34,1.193,35,0.722,36,1.059,38,1.896,64,0.622,108,0.018,109,0.018,119,3.51,130,3.994,131,2.14,139,4.502,141,2.563,142,3.045,146,1.496,147,2.14,348,3.488,377,4.783,378,4.783,379,4.621,380,4.484,381,3.815,382,3.815,383,3.815]],["title/classes/OAuthResourceServerConfig.html",[0,0.065,370,3.01]],["body/classes/OAuthResourceServerConfig.html",[0,0.099,2,0.757,3,0.861,4,0.808,9,1.476,16,0.834,19,0.976,26,0.834,33,0.023,35,0.894,57,1.987,59,2.051,64,0.614,83,1.476,108,0.018,109,0.018,114,4.174,121,2.51,155,1.987,162,4.175,176,1.566,191,1.476,207,1.661,367,5.174,368,3.735,369,2.982,370,4.576,372,4.719,373,3.442,374,2.939,375,4.338,376,4.129,384,4.391,385,4.391]],["title/classes/OAuthResourceServerErrorHandler.html",[0,0.065,119,2.287]],["body/classes/OAuthResourceServerErrorHandler.html",[0,0.101,2,0.778,3,0.885,4,0.83,7,2.391,9,1.502,10,1.003,13,1.332,19,1.003,26,0.678,32,1.351,33,0.023,34,1.201,35,0.727,36,1.065,38,1.903,64,0.624,108,0.018,109,0.018,119,3.52,130,4.003,131,2.148,139,4.51,141,2.579,142,3.064,146,1.502,147,2.148,348,2.799,377,4.801,378,4.801,379,4.633,381,3.839,382,3.839,383,3.839,386,3.839]],["title/classes/OAuthStorage.html",[0,0.065,117,1.62]],["body/classes/OAuthStorage.html",[0,0.076,2,0.582,3,0.427,4,0.401,8,0.94,9,1.241,10,0.751,11,0.78,13,0.977,16,0.838,19,0.484,24,2.433,26,0.803,29,1.482,30,0.829,32,1.24,33,0.023,34,1.101,35,0.667,36,0.977,38,1.396,40,1.397,45,0.692,48,1.368,53,1.24,56,1.397,57,0.78,58,0.78,59,1.139,63,0.94,64,0.617,65,1.482,66,1.557,67,1.003,68,1.003,69,1.003,73,0.829,74,1.397,83,0.899,108,0.011,109,0.011,117,1.368,134,1.315,146,0.579,147,0.829,171,1.154,172,1.245,175,1.154,176,1.169,177,1.154,178,1.245,179,1.245,180,1.074,182,0.829,183,2.193,184,2.149,185,1.245,186,0.829,187,0.94,188,0.882,189,1.154,191,0.899,192,1.154,193,0.734,194,2.149,195,1.666,196,1.154,197,1.245,198,1.154,199,1.154,200,1.245,201,1.012,202,1.245,203,1.931,204,1.245,207,1.012,208,1.245,209,0.882,210,1.245,211,2.366,212,1.368,214,1.154,216,1.245,217,2.675,218,3.054,219,1.931,220,1.666,221,1.931,222,1.286,223,1.458,224,1.79,225,1.557,226,1.458,227,1.79,228,1.931,229,1.21,230,1.931,231,1.931,232,2.042,233,2.886,234,1.074,235,0.882,236,1.245,237,1.154,238,1.245,239,1.245,240,1.245,241,1.931,242,1.931,243,1.557,244,1.931,245,1.907,246,1.666,247,1.245,248,1.154,249,1.245,250,1.245,251,1.245,252,0.829,253,0.734,254,1.245,255,1.074,256,1.245,257,2.301,258,0.78,259,0.78,260,0.78,261,1.245,262,1.003,263,1.245,264,1.245,265,1.245,266,1.245,267,1.245,268,1.245,269,1.245,270,1.245,271,1.245,272,1.245,273,1.245,274,1.245,275,1.245,276,1.245,277,1.245,278,1.245,279,1.245,280,1.245,281,1.245,282,1.245,283,1.245,284,1.245,285,1.245,286,1.245,287,1.245,288,1.245,289,1.245,290,1.245,387,3.378,388,3.378,389,3.378,390,2.178,391,2.178,392,2.178]],["title/classes/OAuthSuccessEvent.html",[0,0.065,330,2.482]],["body/classes/OAuthSuccessEvent.html",[0,0.102,2,1.08,3,0.736,4,0.69,9,0.998,26,0.564,32,1.124,33,0.024,34,0.998,35,1.01,36,0.886,40,1.5,58,1.344,64,0.693,108,0.016,109,0.016,115,2.47,229,2.019,300,2.328,301,2.328,302,4.085,303,3.889,304,3.828,305,4.085,306,2.548,308,2.328,309,2.328,310,2.328,311,2.328,312,2.328,313,2.328,314,2.328,315,2.328,316,2.328,317,2.328,318,2.328,319,2.328,320,2.328,321,2.328,322,2.328,323,2.328,324,2.145,325,2.328,326,2.328,327,2.145,328,1.851,329,2.548,330,3.107,331,4.085,332,3.828,333,2.328,393,3.751]],["title/interfaces/ParsedIdToken.html",[65,1.271,237,2.119]],["body/interfaces/ParsedIdToken.html",[0,0.068,2,0.588,3,0.433,4,0.406,8,0.952,9,1.25,10,0.49,11,0.79,13,0.521,16,0.807,19,0.49,24,2.429,26,0.87,29,1.495,30,0.84,33,0.023,35,0.865,40,1.733,45,1.085,48,1.691,53,1.407,56,1.407,57,0.79,58,0.79,59,1.151,63,0.952,64,0.62,65,1.614,66,2.341,67,1.017,68,2.165,69,2.165,73,0.84,74,1.347,83,0.908,108,0.011,109,0.011,117,0.894,134,1.327,146,0.587,147,0.84,171,1.169,172,1.262,175,1.169,176,1.434,177,1.169,178,1.262,179,1.262,180,1.089,182,0.84,183,2.212,184,2.165,185,1.262,186,0.84,187,0.952,188,0.894,189,1.169,191,0.908,192,1.169,193,0.744,194,2.165,195,1.684,196,1.169,197,1.262,198,1.169,199,1.169,200,1.262,201,1.022,202,1.262,203,1.951,204,1.262,207,1.022,208,1.262,209,0.894,210,1.262,211,2.386,212,1.382,214,1.169,216,1.262,217,2.692,218,2.686,219,1.262,220,1.089,221,1.262,222,0.84,223,0.952,224,1.169,225,1.017,226,0.952,227,1.169,228,1.262,229,0.79,230,1.262,231,1.262,232,1.089,233,3.071,234,1.089,235,0.894,236,1.262,237,1.809,238,2.686,239,2.686,240,2.686,241,2.686,242,1.951,243,1.573,244,1.951,245,1.924,246,1.684,247,1.262,248,1.169,249,1.262,250,1.262,251,1.262,252,0.84,253,0.744,254,1.262,255,1.089,256,1.262,257,1.089,258,0.79,259,0.79,260,0.79,261,1.262,262,1.017,263,1.262,264,1.262,265,1.262,266,1.262,267,1.262,268,1.262,269,1.262,270,1.262,271,1.262,272,1.262,273,1.262,274,1.262,275,1.262,276,1.262,277,1.262,278,1.262,279,1.262,280,1.262,281,1.262,282,1.262,283,1.262,284,1.262,285,1.262,286,1.262,287,1.262,288,1.262,289,1.262,290,1.262,394,2.207,395,2.207,396,2.207,397,2.207,398,2.207,399,2.207]],["title/classes/ReceivedTokens.html",[0,0.065,217,2.119]],["body/classes/ReceivedTokens.html",[0,0.077,2,0.595,3,0.439,4,0.412,8,0.966,9,1.259,10,0.497,11,0.801,13,0.528,16,0.812,19,0.497,24,2.431,26,0.812,29,1.508,30,0.852,33,0.023,35,0.762,36,1.117,40,1.618,45,0.711,48,1.705,53,1.261,56,1.618,57,0.801,58,0.801,59,1.163,63,0.966,64,0.623,65,1.504,66,2.356,67,2.18,68,1.031,69,1.031,73,0.852,74,1.457,83,0.918,108,0.011,109,0.011,117,0.906,134,1.338,146,0.595,147,0.852,171,1.185,172,1.279,175,1.185,176,1.443,177,1.185,178,1.279,179,1.279,180,1.104,182,0.852,183,2.231,184,2.18,185,1.279,186,0.852,187,0.966,188,0.906,189,1.185,191,0.918,192,1.185,193,0.755,194,2.678,195,1.702,196,1.185,197,1.279,198,1.185,199,1.185,200,1.279,201,1.033,202,1.279,203,1.972,204,1.279,207,1.033,208,1.279,209,0.906,210,1.279,211,2.407,212,1.397,214,1.185,216,1.279,217,2.862,218,2.705,219,1.279,220,1.104,221,1.279,222,0.852,223,0.966,224,1.185,225,1.031,226,0.966,227,1.185,228,1.279,229,0.801,230,1.279,231,1.279,232,1.104,233,3.088,234,1.702,235,1.397,236,2.705,237,1.185,238,1.279,239,1.279,240,1.279,241,1.972,242,1.972,243,1.59,244,1.972,245,1.94,246,1.702,247,1.279,248,1.185,249,1.279,250,1.279,251,1.279,252,0.852,253,0.755,254,1.279,255,1.104,256,1.279,257,1.104,258,0.801,259,0.801,260,0.801,261,1.279,262,1.031,263,1.279,264,1.279,265,1.279,266,1.279,267,1.279,268,1.279,269,1.279,270,1.279,271,1.279,272,1.279,273,1.279,274,1.279,275,1.279,276,1.279,277,1.279,278,1.279,279,1.279,280,1.279,281,1.279,282,1.279,283,1.279,284,1.279,285,1.279,286,1.279,287,1.279,288,1.279,289,1.279,290,1.279,400,2.237,401,2.237,402,2.237,403,2.237]],["title/interfaces/TokenResponse.html",[65,1.271,248,2.119]],["body/interfaces/TokenResponse.html",[0,0.068,2,0.584,3,0.429,4,0.403,8,0.944,9,1.244,10,0.486,11,0.783,13,0.516,16,0.804,19,0.486,24,2.436,26,0.867,29,1.487,30,0.833,33,0.023,35,0.862,36,0.8,40,1.4,45,0.695,48,1.373,53,1.243,56,1.4,57,1.674,58,0.783,59,1.143,63,0.944,64,0.618,65,1.608,66,1.562,67,1.008,68,1.008,69,1.008,73,0.833,74,1.4,83,0.902,108,0.011,109,0.011,117,0.886,134,1.319,146,0.582,147,0.833,171,1.159,172,1.25,175,1.159,176,1.428,177,1.159,178,1.25,179,1.25,180,1.079,182,0.833,183,2.199,184,2.154,185,1.25,186,0.833,187,0.944,188,0.886,189,1.159,191,0.902,192,1.159,193,0.738,194,2.572,195,1.672,196,1.159,197,1.25,198,1.159,199,1.159,200,1.25,201,1.015,202,1.25,203,1.938,204,1.25,207,1.015,208,1.25,209,0.886,210,1.25,211,2.373,212,1.373,214,1.159,216,1.25,217,2.681,218,2.673,219,1.25,220,1.079,221,1.25,222,0.833,223,0.944,224,1.159,225,1.008,226,0.944,227,1.159,228,1.25,229,0.783,230,1.25,231,1.25,232,1.079,233,3.059,234,1.079,235,0.886,236,1.25,237,1.159,238,1.25,239,1.25,240,1.25,241,2.673,242,2.373,243,1.913,244,2.373,245,2.154,246,2.048,247,1.938,248,1.796,249,2.673,250,2.673,251,2.673,252,1.78,253,0.738,254,1.25,255,1.079,256,1.25,257,1.079,258,0.783,259,0.783,260,0.783,261,1.25,262,1.008,263,1.25,264,1.25,265,1.25,266,1.25,267,1.25,268,1.25,269,1.25,270,1.25,271,1.25,272,1.25,273,1.25,274,1.25,275,1.25,276,1.25,277,1.25,278,1.25,279,1.25,280,1.25,281,1.25,282,1.25,283,1.25,284,1.25,285,1.25,286,1.25,287,1.25,288,1.25,289,1.25,290,1.25,404,2.187,405,2.187,406,2.187,407,2.187,408,2.187,409,2.187]],["title/injectables/UrlHelperService.html",[132,2.287,346,3.01]],["body/injectables/UrlHelperService.html",[0,0.062,2,0.655,3,0.746,4,0.699,13,1.193,19,0.844,24,2.183,26,0.759,29,2.166,31,2.172,32,1.513,33,0.023,34,1.344,35,0.814,36,1.193,38,2.123,40,1.811,64,0.42,75,3.192,108,0.016,109,0.016,131,1.446,132,3.244,133,2.172,177,2.676,229,1.361,232,2.492,257,1.874,346,3.801,410,5.674,411,3.8,412,5.051,413,5.051,414,5.051,415,3.8,416,3.8,417,5.051,418,3.8,419,5.051,420,3.8,421,3.8,422,5.051,423,4.297,424,5.051,425,3.801,426,3.8,427,3.8,428,3.8,429,5.674,430,3.8,431,3.8,432,3.8,433,3.8]],["title/interfaces/UserInfo.html",[65,1.271,255,1.973]],["body/interfaces/UserInfo.html",[0,0.07,2,0.744,3,0.457,4,0.429,8,1.005,9,1.286,10,0.518,11,0.834,13,0.55,16,0.825,19,0.791,24,2.431,26,0.726,29,1.546,30,0.887,33,0.023,35,0.375,40,1.448,45,0.74,48,1.441,53,1.293,56,1.448,57,0.834,58,0.834,59,1.2,63,1.005,64,0.632,65,1.654,66,1.64,67,1.073,68,1.073,69,1.073,73,0.887,74,1.376,83,0.947,108,0.011,109,0.011,117,0.943,134,1.372,146,0.62,147,0.887,171,1.234,172,1.332,175,1.234,176,1.47,177,1.234,178,1.332,179,1.332,180,1.149,182,0.887,183,2.288,184,2.227,185,1.332,186,0.887,187,1.005,188,0.943,189,1.234,191,0.947,192,1.234,193,0.786,194,2.227,195,1.755,196,1.234,197,1.332,198,1.234,199,1.234,200,1.332,201,1.066,202,1.332,203,2.034,204,1.332,207,1.066,208,1.332,209,0.943,210,1.332,211,2.468,212,1.441,214,1.234,216,1.332,217,2.758,218,2.763,219,1.332,220,1.149,221,1.332,222,0.887,223,1.005,224,1.234,225,1.073,226,1.005,227,1.234,228,1.332,229,0.834,230,1.332,231,1.332,232,1.149,233,3.138,234,1.149,235,0.943,236,1.332,237,1.234,238,1.332,239,1.332,240,1.332,241,2.034,242,2.468,243,1.99,244,2.468,245,2.227,246,2.13,247,1.332,248,1.234,249,1.332,250,1.332,251,1.332,252,0.887,253,1.2,254,2.034,255,1.755,256,2.763,257,1.755,258,0.834,259,0.834,260,0.834,261,1.332,262,1.073,263,1.332,264,1.332,265,1.332,266,1.332,267,1.332,268,1.332,269,1.332,270,1.332,271,1.332,272,1.332,273,1.332,274,1.332,275,1.332,276,1.332,277,1.332,278,1.332,279,1.332,280,1.332,281,1.332,282,1.332,283,1.332,284,1.332,285,1.332,286,1.332,287,1.332,288,1.332,289,1.332,290,1.332,434,3.558]],["title/classes/ValidationHandler.html",[0,0.065,11,1.433]],["body/classes/ValidationHandler.html",[0,0.076,1,1.78,2,0.452,3,0.514,4,0.482,5,2.876,6,3.488,7,1.388,8,1.131,9,1.581,10,1.03,11,1.837,12,1.78,13,1.211,14,3.148,15,1.626,16,0.697,17,1.78,18,1.972,19,0.582,20,2.926,22,3.148,23,1.972,24,2.004,25,3.859,26,0.584,28,1.972,29,1.66,30,1.48,31,1.498,32,1.165,33,0.024,34,1.233,35,0.626,36,0.918,37,1.972,38,1.73,39,1.972,40,1.536,42,1.972,43,3.488,44,1.972,45,1.888,46,1.972,47,1.972,48,1.061,49,1.498,50,1.972,51,4.041,53,1.828,54,3.72,55,3.148,56,1.388,57,1.66,58,1.66,59,1.563,60,2.64,62,2.65,63,2.213,64,0.513,65,1.473,66,1.207,67,1.207,68,1.207,69,1.207,70,1.78,71,1.972,72,2.06,73,1.48,74,0.975,75,2.831,76,2.64,77,2.926,78,1.972,79,1.972,80,1.972,81,1.972,82,1.972,83,0.697,84,1.972,85,1.972,86,1.972,87,1.498,88,2.926,89,1.972,90,3.859,91,1.972,92,1.972,93,1.972,94,1.972,95,3.859,96,1.972,97,1.972,98,1.972,99,1.972,100,1.972,101,1.972,102,1.972,103,1.061,104,1.972,105,1.498,106,1.972,107,1.972,108,0.012,109,0.012,435,2.621,436,2.621]],["title/interfaces/ValidationParams.html",[51,2.482,65,1.271]],["body/interfaces/ValidationParams.html",[0,0.063,1,1.745,2,0.443,3,0.504,4,0.473,5,3.663,6,4.442,7,1.362,9,1.571,10,1.018,11,1.641,12,1.745,13,0.905,14,1.745,15,1.595,16,0.689,17,1.745,18,1.934,19,0.571,20,2.884,22,1.745,23,1.934,24,2.161,25,3.822,26,0.856,28,1.934,29,1.641,30,1.459,31,1.469,33,0.023,34,0.684,35,0.918,37,1.934,38,1.292,39,1.934,40,1.891,42,1.934,43,3.448,44,1.934,45,1.727,46,1.934,47,1.934,48,1.041,49,1.469,50,1.934,51,3.663,53,1.627,54,3.449,55,2.602,56,1.148,57,1.372,58,1.641,59,1.292,60,1.745,62,2.191,63,1.978,64,0.507,65,1.456,66,2.341,67,2.341,68,2.341,69,2.341,70,3.449,71,3.822,72,1.362,73,0.978,74,0.644,75,1.89,76,1.745,77,2.884,78,1.934,79,1.934,80,1.934,81,1.934,82,1.934,83,0.684,84,1.934,85,1.934,86,1.934,87,1.469,88,2.884,89,1.934,90,3.822,91,1.934,92,1.934,93,1.934,94,1.934,95,3.822,96,1.934,97,1.934,98,1.934,99,1.934,100,1.934,101,1.934,102,1.934,103,1.041,104,1.934,105,1.469,106,1.934,107,1.934,108,0.012,109,0.012,176,1.082,205,2.191,386,2.187,437,2.57,438,2.57,439,2.57,440,2.57,441,2.57]],["title/classes/WebHttpUrlEncodingCodec.html",[0,0.065,442,3.403]],["body/classes/WebHttpUrlEncodingCodec.html",[0,0.081,2,0.642,3,0.73,4,0.685,8,1.607,10,1.107,13,1.176,16,0.749,19,0.827,24,2.403,26,0.901,32,1.796,33,0.023,34,1.596,35,0.966,36,1.416,38,2.252,64,0.412,108,0.016,109,0.016,131,1.417,141,2.128,182,1.896,442,4.239,443,3.723,444,4.983,445,3.749,446,4.983,447,3.384,448,5.616,449,4.983,450,4.983,451,4.983,452,4.983,453,4.983,454,3.723,455,4.983,456,4.983,457,3.723,458,4.983,459,4.983,460,3.723,461,4.983,462,3.723,463,3.723,464,3.723,465,3.723,466,3.723]],["title/changelog.html",[467,1.98,468,1.835,469,3.464]],["body/changelog.html",[10,0.785,11,1.266,13,1.136,16,0.992,26,0.531,33,0.015,45,1.123,53,1.441,56,1.059,62,2.021,74,1.206,83,0.941,87,2.75,103,2.566,105,2.021,108,0.015,109,0.015,117,1.432,130,2.193,134,1.123,155,1.723,176,1.658,186,1.345,187,2.076,188,2.378,191,0.941,193,1.623,201,1.638,207,1.059,212,2.215,225,1.629,226,1.525,245,1.629,253,1.623,258,1.266,259,1.266,260,1.723,324,2.021,359,2.373,362,2.36,468,1.873,470,5.47,471,3.267,472,4.995,473,4.171,474,2.66,475,3.714,476,4.093,477,2.985,478,3.535,479,2.66,480,2.021,481,2.193,482,2.66,483,3.535,484,3.535,485,3.127,486,2.4,487,3.535,488,3.535,489,2.66,490,2.4,491,2.985,492,3.007,493,3.62,494,3.007,495,3.007,496,3.535,497,3.007,498,2.66,499,2.4,500,3.007,501,1.629,502,3.007,503,2.4,504,3.62,505,3.535,506,3.007,507,3.535,508,1.873,509,1.744,510,3.007,511,2.4,512,2.193,513,2.4,514,3.007,515,3.535,516,3.007,517,3.007,518,1.873,519,3.535,520,2.66,521,4.093,522,2.66,523,3.535,524,3.535,525,4.811,526,3.535,527,2.66,528,3.007,529,3.007,530,3.007,531,3.535,532,3.535]],["title/dependencies.html",[533,2.947,534,2.944]],["body/dependencies.html",[33,0.023,108,0.018,109,0.018,133,2.595,142,3.847,193,1.531,201,1.36,224,2.405,246,2.239,343,3.862,534,2.817,535,4.54,536,7.105,537,4.54,538,4.54,539,4.54,540,4.54,541,5.665,542,4.819,543,4.54,544,4.54,545,4.54,546,4.54,547,4.54,548,2.405,549,4.54,550,3.416,551,4.54,552,3.862,553,4.54,554,3.862,555,4.54,556,4.54,557,4.54,558,4.54,559,4.54]],["title/miscellaneous/functions.html",[205,2.713,560,1.98]],["body/miscellaneous/functions.html",[19,1.147,32,1.546,33,0.022,34,1.374,36,1.219,108,0.02,109,0.02,135,3.8,205,2.951,338,4.392,339,5.211,352,5.557,560,2.951,561,6.125,562,5.162,563,6.125,564,5.162,565,5.162,566,5.162,567,5.162]],["title/index.html",[19,0.77,467,1.98,468,1.835]],["body/index.html",[0,0.073,3,0.541,10,0.613,13,0.399,16,0.879,26,0.254,29,0.605,30,0.643,33,0.023,34,0.734,38,0.931,40,0.506,45,0.537,49,2.545,53,1.21,62,0.966,64,0.447,73,0.643,74,1.264,75,1.726,83,0.45,87,0.966,103,1.935,105,1.578,108,0.009,109,0.009,131,2.071,133,1.578,134,1.602,135,1.048,136,1.147,145,2.376,146,1.341,149,1.271,151,1.048,155,1.253,162,1.712,165,2.077,173,0.45,182,0.643,184,1.272,186,1.05,188,1.417,191,0.931,193,1.972,196,0.895,201,1.782,205,0.966,207,0.827,209,1.417,214,0.895,222,1.05,223,0.729,229,0.605,234,1.726,235,1.118,243,1.272,245,1.612,246,1.361,252,1.05,253,1.7,255,0.833,258,1.447,259,0.605,260,1.594,262,0.778,295,1.048,328,1.361,337,1.147,340,2.348,355,1.271,359,0.833,362,1.191,369,1.147,374,0.895,375,1.874,376,1.147,445,1.271,447,2.743,467,0.966,468,0.895,471,2.376,472,2.348,473,1.874,474,1.271,475,1.147,476,2.348,479,1.271,480,2,481,1.048,482,1.271,485,0.966,486,1.147,489,3.039,490,2.376,491,1.048,498,1.271,501,2.579,503,1.874,504,2.633,508,2.14,509,2.594,511,1.147,512,1.048,513,1.147,517,1.437,518,0.895,522,1.271,530,3.788,548,3.2,550,1.271,568,1.689,569,2.76,570,1.689,571,1.935,572,1.689,573,1.689,574,2.882,575,1.689,576,1.689,577,2.76,578,1.689,579,2.76,580,2.762,581,1.689,582,1.437,583,1.689,584,1.689,585,1.689,586,1.689,587,1.689,588,1.437,589,1.437,590,2.76,591,1.689,592,1.689,593,1.689,594,1.689,595,1.689,596,1.689,597,2.76,598,1.689,599,1.689,600,1.689,601,1.689,602,2.976,603,1.689,604,1.689,605,1.689,606,1.689,607,1.689,608,1.689,609,1.689,610,2.762,611,1.437,612,1.689,613,1.437,614,2.077,615,1.689,616,2.357,617,1.437,618,1.689,619,1.437,620,1.271,621,1.689,622,2.077,623,2.633,624,1.689,625,1.689,626,1.689,627,2.76,628,2.077,629,2.545,630,2,631,2.348,632,2.077,633,3.498,634,3.498,635,1.689,636,1.689,637,1.689,638,1.271,639,1.689,640,1.689,641,1.689,642,1.689,643,2.348,644,2.376,645,2.76,646,1.689,647,2.077,648,1.147,649,1.271,650,1.437,651,1.689,652,0.931,653,2.348,654,1.689,655,1.578,656,1.689,657,1.689,658,3.039,659,0.966,660,1.147,661,1.048,662,1.048,663,1.048,664,1.271,665,1.048,666,0.833,667,1.271,668,1.271,669,1.271,670,1.271,671,1.271,672,0.966,673,0.966,674,2.633,675,2.348,676,1.689,677,2.743,678,1.689,679,1.689,680,2.76,681,1.689,682,1.874,683,1.689,684,1.689,685,1.689,686,1.437,687,2.76,688,2.976,689,1.689,690,1.437,691,1.689,692,1.689,693,1.689,694,1.689,695,1.437,696,1.437,697,1.689,698,1.689,699,2.76,700,1.689,701,1.689,702,1.689,703,1.147,704,1.437,705,1.689,706,1.689,707,1.689,708,1.689,709,1.147,710,1.437,711,1.271,712,1.437,713,2.76,714,2.76,715,2.76,716,1.689,717,2.76,718,1.689,719,1.689,720,2.348,721,1.437,722,1.437,723,0.966,724,1.437,725,2.171,726,1.689,727,1.689,728,1.689,729,1.271,730,1.271,731,2.077,732,1.048,733,1.689,734,2.976,735,1.689,736,1.437,737,1.689,738,1.437,739,1.689,740,1.437,741,1.689]],["title/modules.html",[336,2.987]],["body/modules.html",[33,0.02,108,0.02,109,0.02,336,3.174,337,3.77,742,5.552,743,4.724,744,5.552]],["title/overview.html",[745,4.445]],["body/overview.html",[0,0.086,33,0.02,64,0.581,65,1.67,87,3.004,108,0.02,109,0.02,132,3.004,336,3.538,355,3.954,362,2.267,425,3.954,491,3.26,534,3.26,550,3.954,588,4.47,745,4.47,746,5.254,747,6.19,748,5.254,749,5.254]],["title/miscellaneous/typealiases.html",[560,1.98,750,4.745]],["body/miscellaneous/typealiases.html",[19,1.054,33,0.023,35,0.764,108,0.019,109,0.019,301,2.944,305,3.908,308,2.944,309,2.944,310,2.944,311,2.944,312,2.944,313,2.944,314,2.944,315,2.944,316,2.944,317,2.944,318,2.944,319,2.944,320,2.944,321,2.944,322,2.944,323,2.944,324,2.713,325,2.944,326,2.944,327,2.713,328,2.341,560,2.713,751,4.745,752,4.745]],["title/miscellaneous/variables.html",[560,1.98,753,4.037]],["body/miscellaneous/variables.html",[5,3.094,7,3.41,19,1.108,31,3.43,33,0.022,35,0.803,53,1.928,103,2.02,108,0.019,109,0.019,485,3.43,560,2.851,753,4.243,754,6.436,755,4.987,756,6.436,757,6,758,6.436,759,4.987,760,4.987,761,4.987,762,4.987]],["title/additional-documentation/getting-started.html",[173,0.813,467,1.746,468,1.618,652,0.813]],["body/additional-documentation/getting-started.html",[33,0.02,108,0.02,109,0.02,467,3.622,468,3.358,763,3.127,764,5.47,765,5.47,766,4.116,767,4.116]],["title/additional-documentation/preserving-state-(like-the-requested-url).html",[155,0.885,173,0.657,194,1.138,652,0.657,666,1.219,768,2.102]],["body/additional-documentation/preserving-state-(like-the-requested-url).html",[2,0.89,30,1.965,33,0.022,36,1.219,108,0.02,109,0.02,155,2.194,180,2.546,194,3.01,207,1.546,501,2.379,666,3.022,690,4.392,768,4.392,769,5.162,770,5.162,771,4.392,772,3.505,773,5.162,774,5.162]],["title/additional-documentation/refreshing-a-token-(silent-refresh).html",[74,0.619,173,0.657,187,1.066,188,1.507,652,0.657]],["body/additional-documentation/refreshing-a-token-(silent-refresh).html",[2,0.471,4,0.874,13,0.947,15,1.695,16,0.905,26,0.603,31,2.292,33,0.022,40,0.818,56,0.818,64,0.302,74,1.58,103,1.624,108,0.013,109,0.013,126,2.056,131,1.04,134,1.51,146,1.264,147,1.526,151,1.695,155,1.701,176,1.478,186,1.04,187,2.665,188,2.594,189,2.517,191,1.483,193,0.922,201,1.201,207,1.201,209,1.924,212,1.924,222,1.04,235,1.624,252,1.526,253,1.765,258,0.979,262,1.259,359,1.348,362,1.731,374,1.448,423,2.325,425,2.056,445,2.056,467,1.562,471,1.856,473,1.856,480,1.562,482,2.056,485,2.292,486,2.723,499,1.856,501,1.259,503,1.856,508,2.517,509,2.343,511,2.723,512,2.488,513,2.723,514,2.325,518,1.448,548,2.125,574,2.292,610,2.947,613,4.042,616,2.343,628,2.056,629,2.992,630,1.562,632,2.056,638,3.018,653,3.412,655,2.716,658,3.575,659,1.562,660,1.856,661,2.947,662,1.695,663,1.695,664,2.056,665,1.695,666,1.348,667,2.056,668,2.056,669,2.056,670,2.056,671,2.056,672,1.562,673,1.562,709,1.856,712,2.325,736,2.325,738,2.325,740,2.325,763,1.562,775,2.733,776,2.325,777,2.733,778,2.733,779,2.733,780,4.01,781,1.856,782,2.733,783,2.733,784,1.856,785,2.733,786,2.733,787,2.325,788,3.412,789,3.412,790,2.733,791,2.733,792,2.733,793,2.733,794,2.733,795,2.325,796,2.325,797,2.056,798,3.412,799,2.733,800,2.733,801,2.733,802,2.733,803,2.325,804,2.733,805,2.733,806,4.01,807,2.325,808,2.733,809,2.056,810,4.01,811,2.733,812,2.733,813,2.733,814,2.733,815,2.733,816,2.733,817,2.056,818,2.733,819,2.733,820,2.733,821,2.733,822,2.733,823,2.733,824,2.733,825,2.733,826,2.733,827,4.01,828,2.733,829,2.733,830,4.01,831,4.01,832,2.733,833,2.733,834,2.325,835,2.733,836,2.733,837,2.733,838,2.733,839,2.733]],["title/additional-documentation/working-with-httpinterceptors.html",[138,2.299,173,0.813,652,0.813,840,3.055]],["body/additional-documentation/working-with-httpinterceptors.html",[0,0.081,9,0.779,10,1.201,16,0.743,24,0.988,30,1.115,33,0.023,36,0.996,38,2.074,49,3.091,56,0.877,57,1.51,59,0.988,64,0.467,72,2.235,74,1.239,75,1.445,83,1.122,108,0.013,109,0.013,110,3.719,111,1.989,115,1.445,117,2.001,118,2.492,119,3.276,120,2.492,121,2.411,123,2.492,124,2.492,125,3.588,126,2.204,127,3.588,129,2.492,130,3.066,131,2.341,132,3.091,133,1.674,134,1.34,135,1.817,136,2.864,137,2.492,138,3.719,139,2.864,140,2.492,141,1.674,145,3.356,146,1.315,147,2.272,148,2.204,149,4.069,150,2.492,152,3.174,153,2.492,154,2.492,155,1.77,156,2.492,157,2.492,158,4.6,159,2.492,160,2.492,161,2.492,162,3.355,163,2.492,164,2.492,165,2.204,167,2.492,170,2.492,182,1.605,191,1.122,193,0.988,199,1.552,201,0.877,227,1.552,348,1.817,362,1.82,369,1.989,375,2.864,376,1.989,379,2.204,474,2.204,485,2.411,492,2.492,494,2.492,522,2.204,534,1.817,548,1.552,571,1.186,582,2.492,643,2.492,648,1.989,655,1.674,709,1.989,720,3.588,721,2.492,722,2.492,723,1.674,724,2.492,795,2.492,796,2.492,817,2.204,841,2.929,842,2.929,843,2.204,844,2.929,845,2.492,846,2.929,847,2.929,848,2.929,849,2.929,850,2.492,851,1.989,852,2.929,853,2.204,854,2.492,855,2.929,856,2.929,857,2.929,858,2.929,859,2.929,860,2.929,861,2.929,862,2.492,863,2.929,864,2.929,865,2.929,866,2.929,867,2.929,868,2.929,869,2.929]],["title/additional-documentation/callback-after-login.html",[173,0.813,501,1.408,652,0.813,870,2.599]],["body/additional-documentation/callback-after-login.html",[33,0.023,45,1.891,53,1.474,56,1.474,57,1.762,108,0.019,109,0.019,180,2.936,207,1.474,501,2.742,503,3.341,666,2.427,703,3.341,723,2.812,772,3.341,803,4.186,870,5.064,871,4.92,872,5.064,873,4.92,874,4.92,875,4.92,876,3.341,877,4.92,878,4.92,879,4.92]],["title/additional-documentation/custom-query-parameters.html",[32,0.818,173,0.727,182,1.04,614,2.056,652,0.727]],["body/additional-documentation/custom-query-parameters.html",[29,1.875,32,1.85,33,0.022,108,0.02,109,0.02,176,1.478,182,2.351,191,1.393,468,2.774,508,2.774,509,2.583,614,3.94,843,3.94,880,5.236,881,5.236,882,5.236,883,5.236,884,5.236,885,5.236]],["title/additional-documentation/events.html",[173,0.922,212,1.403,652,0.922]],["body/additional-documentation/events.html",[4,0.957,16,0.781,24,1.753,33,0.022,108,0.02,109,0.02,194,2.395,212,2.742,475,3.53,486,3.53,527,3.912,571,2.105,732,3.225,743,4.423,850,4.423,886,5.199,887,5.199,888,5.199,889,4.423,890,5.199,891,5.199]],["title/additional-documentation/routing-with-the-hashstrategy.html",[173,0.813,652,0.813,725,1.895,730,2.299]],["body/additional-documentation/routing-with-the-hashstrategy.html",[12,3.036,16,0.922,17,3.81,29,1.601,33,0.022,56,1.339,64,0.495,74,1.121,83,1.19,108,0.018,109,0.018,175,2.369,183,2.369,191,1.19,192,2.369,198,2.369,295,2.774,336,2.556,485,2.556,516,3.804,571,1.811,589,5.217,602,3.804,610,3.481,647,3.364,649,3.364,674,3.364,723,2.556,725,3.99,730,4.222,771,3.804,776,3.804,781,3.036,788,4.773,809,4.222,817,3.364,853,3.364,854,3.804,892,4.471,893,6.431,894,6.132,895,4.471,896,4.471,897,4.471,898,4.471,899,4.471,900,4.471,901,3.364,902,4.471,903,4.471,904,4.471]],["title/additional-documentation/adapt-id_token-validation.html",[45,0.868,53,0.818,173,0.727,652,0.727,905,2.324]],["body/additional-documentation/adapt-id_token-validation.html",[10,1.223,11,2.166,26,0.652,33,0.023,45,1.75,53,1.905,54,2.946,55,2.946,56,1.811,62,3.147,65,1.379,70,2.946,73,1.651,75,2.14,103,1.757,108,0.018,109,0.018,131,1.651,132,3.147,176,1.554,186,2.096,193,1.463,201,1.299,222,1.651,223,1.872,257,2.14,259,1.554,260,1.554,291,3.265,295,2.692,362,2.61,364,3.691,499,2.946,504,3.265,533,3.691,534,3.416,548,2.299,571,1.757,616,2.14,649,3.265,675,5.145,686,3.691,723,2.48,787,3.691,905,3.691,906,4.339,907,4.339,908,4.339,909,3.691,910,4.339,911,4.339,912,4.339,913,3.691,914,4.339]],["title/additional-documentation/session-checks.html",[173,0.813,195,1.507,493,2.299,652,0.813]],["body/additional-documentation/session-checks.html",[10,0.864,16,0.585,26,0.585,33,0.023,36,1.211,56,1.165,64,0.43,73,1.481,74,0.975,83,1.035,105,2.224,108,0.016,109,0.016,131,1.481,151,2.414,173,1.035,176,1.098,182,1.481,187,1.679,191,1.035,193,1.312,195,2.832,201,1.165,207,1.165,212,2.325,245,1.793,252,1.481,253,1.312,258,1.837,262,1.793,327,2.933,328,1.919,362,2.214,373,2.414,374,2.061,473,2.642,477,2.414,479,2.928,490,2.642,491,2.414,493,4.902,495,4.365,497,3.31,498,2.928,499,2.642,500,3.31,511,2.642,518,2.061,529,3.31,548,2.061,571,2.078,574,3.282,616,2.531,620,2.928,628,2.928,629,2.224,630,2.224,632,2.928,638,2.928,658,4.32,659,2.224,660,2.642,661,3.183,662,2.414,672,2.224,673,2.224,674,2.928,763,2.224,789,3.31,809,2.928,862,3.31,915,3.891,916,3.891,917,5.741,918,3.891,919,3.31,920,3.891,921,3.891,922,3.891,923,5.131,924,3.891,925,3.891,926,3.891,927,3.891,928,3.891]],["title/additional-documentation/server-side-rendering.html",[146,0.727,173,0.727,223,1.179,652,0.727,929,2.324]],["body/additional-documentation/server-side-rendering.html",[16,0.773,33,0.02,108,0.02,109,0.02,146,1.735,152,3.871,223,2.815,253,1.735,510,4.376,571,2.083,580,3.192,648,3.493,734,4.376,851,3.493,929,5.549,930,5.144,931,5.144,932,5.144,933,5.144,934,5.144,935,5.144,936,5.144,937,5.144]],["title/additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html",[173,0.511,259,0.688,260,0.688,508,1.017,509,0.947,571,0.778,616,0.947,652,0.511,784,1.304]],["body/additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html",[0,0.06,10,0.815,13,0.866,16,0.838,33,0.023,35,0.591,48,1.485,64,0.406,103,1.485,108,0.016,109,0.016,134,1.567,146,1.312,155,2.135,176,1.035,184,1.69,191,1.312,209,2.257,220,1.809,222,1.396,225,1.69,226,1.583,235,2.257,243,1.69,252,1.396,253,1.88,258,1.313,259,1.766,260,1.766,328,1.809,359,2.433,362,1.583,373,2.275,374,1.943,477,2.275,480,2.82,481,2.275,489,2.76,490,2.49,491,2.275,501,2.568,508,1.943,509,1.809,518,1.943,520,2.76,571,1.485,574,2.82,580,2.275,610,3.06,616,2.433,619,3.12,622,2.76,623,2.76,629,3.186,630,2.096,644,2.49,652,0.976,655,2.096,659,2.82,661,2.275,662,2.275,663,2.275,665,2.275,666,1.809,672,2.096,673,2.096,677,2.49,682,2.49,703,2.49,711,2.76,729,2.76,731,2.76,732,2.275,763,2.096,766,2.76,767,2.76,772,2.49,781,2.49,784,2.49,851,2.49,876,2.49,901,2.76,938,3.12,939,3.667,940,3.667,941,3.12,942,2.76,943,2.76,944,3.12,945,3.12,946,3.667,947,3.667,948,3.667,949,3.12,950,3.12,951,3.667]],["title/additional-documentation/using-systemjs.html",[16,0.459,173,0.813,652,0.813,952,2.599]],["body/additional-documentation/using-systemjs.html",[16,0.702,33,0.023,108,0.018,109,0.018,193,2.203,201,1.873,359,2.303,548,3.46,552,3.973,554,4.905,617,3.973,732,2.897,798,3.973,952,5.321,953,5.765,954,4.67,955,4.67,956,4.67,957,4.67,958,5.765,959,5.765,960,4.67,961,4.67,962,4.67,963,4.67,964,4.67,965,4.67,966,4.67,967,4.67,968,4.67]],["title/additional-documentation/original-config-api.html",[173,0.727,359,1.348,480,1.562,481,1.695,652,0.727]],["body/additional-documentation/original-config-api.html",[0,0.061,13,0.879,16,0.749,26,0.56,33,0.023,34,0.991,48,1.508,64,0.412,74,0.933,103,1.508,108,0.016,109,0.016,115,1.836,134,1.583,146,1.494,155,1.784,176,1.051,186,1.417,191,1.326,201,1.115,207,1.115,209,2.274,222,1.417,235,2.018,252,1.417,253,2.023,258,1.333,259,1.333,260,1.333,359,2.77,374,1.973,477,2.31,480,3.21,481,3.091,501,2.588,512,2.31,518,1.973,571,1.508,574,2.128,580,3.091,610,3.091,616,1.836,620,2.801,622,2.801,623,2.801,629,3.21,630,2.128,644,3.384,652,0.991,655,2.848,659,2.128,660,2.528,661,2.31,662,2.31,663,2.31,664,2.801,665,2.31,666,1.836,667,2.801,668,2.801,669,2.801,670,2.801,671,2.801,672,2.128,673,2.128,677,2.528,682,2.528,711,3.749,725,2.31,729,2.801,732,2.31,763,2.128,766,2.801,767,2.801,772,2.528,797,2.801,876,3.384,938,3.167,941,3.167,942,2.801,943,2.801,949,3.167,950,3.167,969,3.167,970,3.167,971,3.723,972,3.723,973,3.723]],["title/additional-documentation/using-password-flow.html",[16,0.411,173,0.727,447,1.855,509,1.348,652,0.727]],["body/additional-documentation/using-password-flow.html",[0,0.054,2,0.368,10,0.474,15,2.063,16,1.02,33,0.023,34,0.568,35,0.344,38,1.121,45,0.678,64,0.368,74,1.387,103,0.864,108,0.011,109,0.011,115,1.052,134,1.466,145,2.258,146,1.41,155,1.463,176,1.302,184,0.983,186,0.812,188,1.655,191,1.331,201,0.996,207,1.224,209,2.145,220,1.052,222,2.288,225,0.983,226,0.921,232,2.276,234,2.276,235,2.025,243,0.983,252,1.555,253,1.93,258,1.191,259,1.652,260,1.652,293,1.815,295,1.324,362,1.435,373,2.063,447,3.992,471,1.449,475,1.449,477,2.535,501,1.532,502,1.815,506,1.815,508,1.762,509,3.11,512,1.324,513,1.449,518,2.165,520,1.605,521,3.476,527,2.502,528,2.829,542,2.829,571,1.655,574,2.335,580,2.063,611,1.815,616,2.613,629,2.859,630,1.901,631,2.829,644,2.774,647,1.605,648,1.449,650,1.815,655,1.22,659,2.335,663,2.063,665,2.063,666,2.015,672,2.335,673,1.901,677,2.258,682,2.258,688,1.815,695,2.829,696,2.829,703,2.774,704,2.829,709,1.449,710,3.476,723,1.901,725,1.324,731,1.605,763,2.637,781,1.449,784,2.774,797,3.471,807,1.815,834,1.815,843,2.502,845,1.815,851,3.396,853,2.502,872,1.815,876,1.449,889,1.815,901,1.605,909,1.815,913,2.829,919,2.829,942,2.502,943,2.502,944,1.815,945,1.815,969,1.815,970,1.815,974,2.133,975,2.133,976,3.325,977,2.133,978,2.133,979,2.133,980,2.133,981,2.133,982,2.133,983,2.133,984,2.133,985,4.085,986,4.613,987,6.01,988,3.325,989,3.325,990,3.325,991,3.325,992,3.325,993,3.325,994,3.325,995,3.325,996,3.325,997,3.325,998,2.133,999,2.133,1000,2.133,1001,2.133,1002,2.133,1003,2.133,1004,2.133,1005,4.085,1006,2.133,1007,2.133,1008,2.133,1009,2.133,1010,2.133,1011,2.133,1012,2.133,1013,3.325,1014,2.133,1015,2.133,1016,2.133,1017,2.133,1018,2.133,1019,2.133]]],"invertedIndex":[["",{"_index":33,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["0",{"_index":423,"title":{},"body":{"injectables/UrlHelperService.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["0.33",{"_index":837,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["0.5",{"_index":835,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["0.8.26",{"_index":559,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":425,"title":{},"body":{"injectables/UrlHelperService.html":{},"overview.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["1.0",{"_index":916,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["1.1.0",{"_index":547,"title":{},"body":{"dependencies.html":{}}}],["17",{"_index":749,"title":{},"body":{"overview.html":{}}}],["1_0.html#tokenendpoint",{"_index":247,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["1_0.html#userinfo",{"_index":254,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["2",{"_index":87,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["2.1",{"_index":479,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/session-checks.html":{}}}],["2.1.8",{"_index":549,"title":{},"body":{"dependencies.html":{}}}],["2.5.1",{"_index":553,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":736,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["20.000",{"_index":824,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["3.0",{"_index":478,"title":{},"body":{"changelog.html":{}}}],["3.1",{"_index":474,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["3.3.7",{"_index":551,"title":{},"body":{"dependencies.html":{}}}],["4.3",{"_index":587,"title":{},"body":{"index.html":{}}}],["401",{"_index":846,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["403",{"_index":847,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["4202",{"_index":635,"title":{},"body":{"index.html":{}}}],["4202]/index.html",{"_index":636,"title":{},"body":{"index.html":{}}}],["4202]/silent",{"_index":637,"title":{},"body":{"index.html":{}}}],["4711",{"_index":883,"title":{},"body":{"additional-documentation/custom-query-parameters.html":{}}}],["4th",{"_index":669,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/original-config-api.html":{}}}],["5",{"_index":588,"title":{},"body":{"index.html":{},"overview.html":{}}}],["6.0.0",{"_index":536,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":556,"title":{},"body":{"dependencies.html":{}}}],["75",{"_index":828,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["8.0.12",{"_index":555,"title":{},"body":{"dependencies.html":{}}}],["8089|4200",{"_index":634,"title":{},"body":{"index.html":{}}}],["9]{3",{"_index":101,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["_",{"_index":93,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["_throw(err",{"_index":857,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["a021627fd9d3th",{"_index":934,"title":{},"body":{"additional-documentation/server-side-rendering.html":{}}}],["abov",{"_index":767,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["abstract",{"_index":9,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["abstractvalidationhandl",{"_index":1,"title":{"classes/AbstractValidationHandler.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["access",{"_index":710,"title":{},"body":{"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["access_token",{"_index":57,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/callback-after-login.html":{}}}],["accesstoken",{"_index":67,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["accord",{"_index":496,"title":{},"body":{"changelog.html":{}}}],["acr_values_support",{"_index":274,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["action",{"_index":921,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["activ",{"_index":917,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["actual",{"_index":185,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["ad",{"_index":956,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["adapt",{"_index":905,"title":{"additional-documentation/adapt-id_token-validation.html":{}},"body":{"additional-documentation/adapt-id_token-validation.html":{}}}],["add",{"_index":738,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["addit",{"_index":173,"title":{"additional-documentation/getting-started.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}},"body":{"classes/LoginOptions.html":{},"index.html":{},"additional-documentation/session-checks.html":{}}}],["adjust",{"_index":832,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["against",{"_index":55,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["alg",{"_index":43,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["alg.match(/^.s[0",{"_index":100,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["alg.substr(2",{"_index":107,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["algorithm",{"_index":25,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["alias",{"_index":751,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":445,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{},"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["allowedurl",{"_index":375,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["alreadi",{"_index":12,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["altern",{"_index":791,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["although",{"_index":988,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["angular",{"_index":548,"title":{},"body":{"dependencies.html":{},"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-systemjs.html":{}}}],["angular/anim",{"_index":535,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":343,"title":{},"body":{"modules/OAuthModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":141,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["angular/compil",{"_index":537,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":133,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"modules/OAuthModule.html":{},"injectables/UrlHelperService.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["angular/el",{"_index":538,"title":{},"body":{"dependencies.html":{}}}],["angular/form",{"_index":539,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":540,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":541,"title":{},"body":{"dependencies.html":{}}}],["angular/rout",{"_index":544,"title":{},"body":{"dependencies.html":{}}}],["angular2",{"_index":570,"title":{},"body":{"index.html":{}}}],["anoth",{"_index":781,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["api",{"_index":480,"title":{"additional-documentation/original-config-api.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["app",{"_index":623,"title":{},"body":{"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["app.component.html",{"_index":681,"title":{},"body":{"index.html":{}}}],["app/home.html",{"_index":691,"title":{},"body":{"index.html":{}}}],["appcompon",{"_index":644,"title":{},"body":{"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["applic",{"_index":653,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["appmodul",{"_index":646,"title":{},"body":{"index.html":{}}}],["approach",{"_index":786,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["approutermodul",{"_index":896,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["array",{"_index":376,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["aspnetcor",{"_index":936,"title":{},"body":{"additional-documentation/server-side-rendering.html":{}}}],["asset",{"_index":806,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["asstr",{"_index":82,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["assum",{"_index":621,"title":{},"body":{"index.html":{}}}],["at_hash",{"_index":54,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["athash",{"_index":90,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["attack",{"_index":200,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["auth",{"_index":209,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["auth.config",{"_index":676,"title":{},"body":{"index.html":{}}}],["auth_config",{"_index":754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authconfig",{"_index":658,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/session-checks.html":{}}}],["authent",{"_index":734,"title":{},"body":{"index.html":{},"additional-documentation/server-side-rendering.html":{}}}],["author",{"_index":714,"title":{},"body":{"index.html":{}}}],["authorization_endpoint",{"_index":263,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["authstorag",{"_index":123,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["autom",{"_index":718,"title":{},"body":{"index.html":{}}}],["automat",{"_index":511,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/session-checks.html":{}}}],["avail",{"_index":743,"title":{},"body":{"modules.html":{},"additional-documentation/events.html":{}}}],["avoid",{"_index":198,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["b",{"_index":980,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["b64decodeunicod",{"_index":561,"title":{},"body":{"miscellaneous/functions.html":{}}}],["b64decodeunicode(str",{"_index":566,"title":{},"body":{"miscellaneous/functions.html":{}}}],["back",{"_index":950,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["backend",{"_index":576,"title":{},"body":{"index.html":{}}}],["base",{"_index":889,"title":{},"body":{"additional-documentation/events.html":{},"additional-documentation/using-password-flow.html":{}}}],["basi",{"_index":609,"title":{},"body":{"index.html":{}}}],["bearer",{"_index":165,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["beaugrand",{"_index":955,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["befor",{"_index":512,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["begin",{"_index":915,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["below",{"_index":984,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["best",{"_index":196,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{}}}],["better",{"_index":506,"title":{},"body":{"changelog.html":{},"additional-documentation/using-password-flow.html":{}}}],["between",{"_index":834,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/using-password-flow.html":{}}}],["blog",{"_index":931,"title":{},"body":{"additional-documentation/server-side-rendering.html":{}}}],["boolean",{"_index":59,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["bootstrap",{"_index":550,"title":{},"body":{"dependencies.html":{},"index.html":{},"overview.html":{}}}],["break",{"_index":515,"title":{},"body":{"changelog.html":{}}}],["brows",{"_index":744,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":542,"title":{},"body":{"dependencies.html":{},"additional-documentation/using-password-flow.html":{}}}],["btoa(leftmosthalf",{"_index":89,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["bug",{"_index":603,"title":{},"body":{"index.html":{}}}],["bugfix",{"_index":607,"title":{},"body":{"index.html":{}}}],["build",{"_index":740,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["bundl",{"_index":593,"title":{},"body":{"index.html":{}}}],["calchash",{"_index":18,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["calchash(valuetohash",{"_index":23,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["calcul",{"_index":28,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["call",{"_index":207,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["callback",{"_index":870,"title":{"additional-documentation/callback-after-login.html":{}},"body":{"additional-documentation/callback-after-login.html":{}}}],["care",{"_index":842,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["case",{"_index":723,"title":{},"body":{"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-password-flow.html":{}}}],["catch",{"_index":726,"title":{},"body":{"index.html":{}}}],["catch(err",{"_index":814,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["catcherror",{"_index":143,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["chang",{"_index":470,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":469,"title":{"changelog.html":{}},"body":{}}],["charact",{"_index":446,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["check",{"_index":195,"title":{"additional-documentation/session-checks.html":{}},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/session-checks.html":{}}}],["check_session_ifram",{"_index":268,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["checkurl(url",{"_index":150,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["circular",{"_index":861,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["cite",{"_index":990,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["cj",{"_index":964,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["claim",{"_index":234,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["claim_types_support",{"_index":286,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["claims.given_nam",{"_index":696,"title":{},"body":{"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["claims_parameter_support",{"_index":288,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["claims_support",{"_index":287,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["claimsathash",{"_index":95,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"classes/ReceivedTokens.html":{},"classes/ValidationHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"index.html":{},"overview.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["cli",{"_index":805,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["cli.json",{"_index":808,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["client",{"_index":222,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["clientid",{"_index":628,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/session-checks.html":{}}}],["code",{"_index":582,"title":{},"body":{"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["come",{"_index":790,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["commonj",{"_index":592,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":342,"title":{},"body":{"modules/OAuthModule.html":{}}}],["commun",{"_index":818,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["compat",{"_index":224,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"dependencies.html":{}}}],["compens",{"_index":777,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["compon",{"_index":677,"title":{},"body":{"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["config",{"_index":359,"title":{"additional-documentation/original-config-api.html":{}},"body":{"modules/OAuthModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/original-config-api.html":{}}}],["config.resourceserv",{"_index":360,"title":{},"body":{"modules/OAuthModule.html":{}}}],["config.resourceserver.allowedurl",{"_index":361,"title":{},"body":{"modules/OAuthModule.html":{}}}],["configur",{"_index":616,"title":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}},"body":{"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["configurewithnewconfigapi",{"_index":684,"title":{},"body":{"index.html":{}}}],["connect",{"_index":245,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/session-checks.html":{}}}],["consol",{"_index":912,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{}}}],["console.debug(\"log",{"_index":878,"title":{},"body":{"additional-documentation/callback-after-login.html":{}}}],["console.debug('given_nam",{"_index":1013,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["console.debug('oauth/oidc",{"_index":887,"title":{},"body":{"additional-documentation/events.html":{}}}],["console.debug('ok",{"_index":1019,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["console.debug('refresh",{"_index":812,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["console.debug('st",{"_index":773,"title":{},"body":{"additional-documentation/preserving-state-(like-the-requested-url).html":{}}}],["console.debug('your",{"_index":927,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["console.debug(context",{"_index":879,"title":{},"body":{"additional-documentation/callback-after-login.html":{}}}],["console.error('actu",{"_index":98,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["console.error('exptect",{"_index":97,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["console.error('refresh",{"_index":815,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["const",{"_index":151,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"modules/OAuthModule.html":{},"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/session-checks.html":{}}}],["constructor",{"_index":115,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["constructor(authstorag",{"_index":116,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["constructor(priv",{"_index":682,"title":{},"body":{"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["constructor(readonli",{"_index":329,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["constructor(typ",{"_index":304,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["contain",{"_index":602,"title":{},"body":{"index.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["context",{"_index":873,"title":{},"body":{"additional-documentation/callback-after-login.html":{}}}],["conveni",{"_index":483,"title":{},"body":{"changelog.html":{}}}],["conveninc",{"_index":707,"title":{},"body":{"index.html":{}}}],["cooki",{"_index":782,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["copi",{"_index":802,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["core",{"_index":246,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"dependencies.html":{},"index.html":{}}}],["cought",{"_index":856,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["creat",{"_index":227,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["createdefaultstorag",{"_index":352,"title":{},"body":{"modules/OAuthModule.html":{},"miscellaneous/functions.html":{}}}],["credenti",{"_index":1009,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["credit",{"_index":568,"title":{},"body":{"index.html":{}}}],["critic",{"_index":606,"title":{},"body":{"index.html":{}}}],["current",{"_index":919,"title":{},"body":{"additional-documentation/session-checks.html":{},"additional-documentation/using-password-flow.html":{}}}],["custom",{"_index":182,"title":{"additional-documentation/custom-query-parameters.html":{}},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/session-checks.html":{}}}],["customhashfrag",{"_index":177,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{}}}],["customqueryparam",{"_index":880,"title":{},"body":{"additional-documentation/custom-query-parameters.html":{}}}],["cycl",{"_index":599,"title":{},"body":{"index.html":{}}}],["data",{"_index":232,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"additional-documentation/using-password-flow.html":{}}}],["decid",{"_index":914,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{}}}],["declar",{"_index":355,"title":{},"body":{"modules/OAuthModule.html":{},"index.html":{},"overview.html":{}}}],["decodekey",{"_index":449,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["decodekey(k",{"_index":453,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["decodeuricomponent(hash",{"_index":421,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["decodeuricomponent(k",{"_index":465,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["decodeuricomponent(v",{"_index":466,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["decodevalu",{"_index":450,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["decodevalue(v",{"_index":456,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["default",{"_index":485,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["defaultextens",{"_index":965,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["defaultoauthinterceptor",{"_index":111,"title":{"interceptors/DefaultOAuthInterceptor.html":{}},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"modules/OAuthModule.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["defin",{"_index":26,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/original-config-api.html":{}}}],["delet",{"_index":920,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["demand",{"_index":521,"title":{},"body":{"changelog.html":{},"additional-documentation/using-password-flow.html":{}}}],["demo",{"_index":630,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["demonstr",{"_index":875,"title":{},"body":{"additional-documentation/callback-after-login.html":{}}}],["dep",{"_index":959,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["depend",{"_index":534,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["deprec",{"_index":211,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["describ",{"_index":976,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["descript",{"_index":8,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{}}}],["design",{"_index":1017,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["detect",{"_index":208,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["di",{"_index":505,"title":{},"body":{"changelog.html":{}}}],["directli",{"_index":709,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/using-password-flow.html":{}}}],["directori",{"_index":804,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["disabl",{"_index":192,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["disableoauth2statecheck",{"_index":178,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["discoveri",{"_index":259,"title":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["discovery_document_load",{"_index":308,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["discovery_document_load_error",{"_index":312,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["discovery_document_validation_error",{"_index":313,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["display",{"_index":705,"title":{},"body":{"index.html":{}}}],["display_values_support",{"_index":285,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["do",{"_index":204,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["document",{"_index":260,"title":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["doesn't",{"_index":951,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}}}],["don't",{"_index":703,"title":{},"body":{"index.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["dosn't",{"_index":973,"title":{},"body":{"additional-documentation/original-config-api.html":{}}}],["dummi",{"_index":986,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["dummyclientsecret",{"_index":994,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["dynam",{"_index":543,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":527,"title":{},"body":{"changelog.html":{},"additional-documentation/events.html":{},"additional-documentation/using-password-flow.html":{}}}],["e.typ",{"_index":925,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["each",{"_index":601,"title":{},"body":{"index.html":{}}}],["eas",{"_index":615,"title":{},"body":{"index.html":{}}}],["easiest",{"_index":863,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["element",{"_index":546,"title":{},"body":{"dependencies.html":{}}}],["email",{"_index":672,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["enabl",{"_index":946,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}}}],["encod",{"_index":444,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["encodekey",{"_index":451,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["encodekey(k",{"_index":459,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["encodeuricomponent(k",{"_index":463,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["encodeuricomponent(v",{"_index":464,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["encodevalu",{"_index":452,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["encodevalue(v",{"_index":461,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["end",{"_index":918,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["end_session_endpoint",{"_index":269,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["endpoint",{"_index":243,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["endpont",{"_index":1003,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["enter",{"_index":611,"title":{},"body":{"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["enum",{"_index":890,"title":{},"body":{"additional-documentation/events.html":{}}}],["environ",{"_index":586,"title":{},"body":{"index.html":{}}}],["err",{"_index":381,"title":{},"body":{"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{}}}],["err));when",{"_index":816,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["error",{"_index":147,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["error('algorithm",{"_index":104,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["errorhandl",{"_index":118,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["escapedkey",{"_index":431,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["escapedvalu",{"_index":432,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["event",{"_index":212,"title":{"additional-documentation/events.html":{}},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/events.html":{},"additional-documentation/session-checks.html":{}}}],["events.t",{"_index":891,"title":{},"body":{"additional-documentation/events.html":{}}}],["eventtyp",{"_index":305,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["exampl",{"_index":854,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["expir",{"_index":513,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/using-password-flow.html":{}}}],["expires_in",{"_index":250,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["explicitli",{"_index":913,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-password-flow.html":{}}}],["export",{"_index":64,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"index.html":{},"overview.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["extend",{"_index":302,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["fact",{"_index":778,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["factor",{"_index":833,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["fail",{"_index":519,"title":{},"body":{"changelog.html":{}}}],["fals",{"_index":516,"title":{},"body":{"changelog.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["featur",{"_index":472,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["feel",{"_index":858,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["fetch",{"_index":1005,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["field",{"_index":44,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["file",{"_index":4,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/events.html":{}}}],["find",{"_index":764,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["fine",{"_index":728,"title":{},"body":{"index.html":{}}}],["fire",{"_index":827,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["first",{"_index":667,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/original-config-api.html":{}}}],["fix",{"_index":604,"title":{},"body":{"index.html":{}}}],["flight",{"_index":679,"title":{},"body":{"index.html":{}}}],["flow",{"_index":509,"title":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["follow",{"_index":655,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["form",{"_index":688,"title":{},"body":{"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["format",{"_index":963,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["former",{"_index":908,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{}}}],["forroot(config",{"_index":357,"title":{},"body":{"modules/OAuthModule.html":{}}}],["found",{"_index":152,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/server-side-rendering.html":{}}}],["fragment",{"_index":183,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["free",{"_index":859,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["full",{"_index":888,"title":{},"body":{"additional-documentation/events.html":{}}}],["function",{"_index":205,"title":{"miscellaneous/functions.html":{}},"body":{"classes/LoginOptions.html":{},"modules/OAuthModule.html":{},"interfaces/ValidationParams.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["further",{"_index":618,"title":{},"body":{"index.html":{}}}],["g",{"_index":528,"title":{},"body":{"changelog.html":{},"additional-documentation/using-password-flow.html":{}}}],["geheim",{"_index":997,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["geheim').then",{"_index":1016,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["geheim').then((resp",{"_index":1011,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["gener",{"_index":569,"title":{},"body":{"index.html":{}}}],["get",{"_index":467,"title":{"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{}},"body":{"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["gethashfragmentparam",{"_index":412,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["gethashfragmentparams(customhashfrag",{"_index":414,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["getitem",{"_index":387,"title":{},"body":{"classes/OAuthStorage.html":{}}}],["getitem(key",{"_index":228,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["give",{"_index":819,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["grant_types_support",{"_index":276,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["graph",{"_index":742,"title":{},"body":{"modules.html":{}}}],["great",{"_index":930,"title":{},"body":{"additional-documentation/server-side-rendering.html":{}}}],["guid",{"_index":765,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["half",{"_index":836,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["hallo",{"_index":699,"title":{},"body":{"index.html":{}}}],["handl",{"_index":844,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["handle(req",{"_index":168,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["handleerror",{"_index":378,"title":{},"body":{"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{}}}],["handleerror(err",{"_index":379,"title":{},"body":{"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["handler",{"_index":72,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/NullValidationHandler.html":{},"modules/OAuthModule.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["handler.t",{"_index":7,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"miscellaneous/variables.html":{}}}],["handler.ts:10",{"_index":380,"title":{},"body":{"classes/OAuthNoopResourceServerErrorHandler.html":{}}}],["handler.ts:11",{"_index":297,"title":{},"body":{"classes/NullValidationHandler.html":{}}}],["handler.ts:18",{"_index":436,"title":{},"body":{"classes/ValidationHandler.html":{}}}],["handler.ts:2",{"_index":438,"title":{},"body":{"interfaces/ValidationParams.html":{}}}],["handler.ts:25",{"_index":435,"title":{},"body":{"classes/ValidationHandler.html":{}}}],["handler.ts:3",{"_index":437,"title":{},"body":{"interfaces/ValidationParams.html":{}}}],["handler.ts:37",{"_index":61,"title":{},"body":{"classes/AbstractValidationHandler.html":{}}}],["handler.ts:4",{"_index":439,"title":{},"body":{"interfaces/ValidationParams.html":{}}}],["handler.ts:42",{"_index":52,"title":{},"body":{"classes/AbstractValidationHandler.html":{}}}],["handler.ts:5",{"_index":386,"title":{},"body":{"classes/OAuthResourceServerErrorHandler.html":{},"interfaces/ValidationParams.html":{}}}],["handler.ts:6",{"_index":440,"title":{},"body":{"interfaces/ValidationParams.html":{}}}],["handler.ts:7",{"_index":441,"title":{},"body":{"interfaces/ValidationParams.html":{}}}],["handler.ts:71",{"_index":41,"title":{},"body":{"classes/AbstractValidationHandler.html":{}}}],["handler.ts:8",{"_index":298,"title":{},"body":{"classes/NullValidationHandler.html":{}}}],["handler.ts:88",{"_index":27,"title":{},"body":{"classes/AbstractValidationHandler.html":{}}}],["hash",{"_index":29,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"index.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["hash.indexof",{"_index":422,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["hash.substr(1",{"_index":427,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["hash.substr(questionmarkposit",{"_index":426,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["hashalg",{"_index":77,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["hashlocationstrategi",{"_index":591,"title":{},"body":{"index.html":{}}}],["hashstrategi",{"_index":730,"title":{"additional-documentation/routing-with-the-hashstrategy.html":{}},"body":{"index.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["header",{"_index":49,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["helper.servic",{"_index":347,"title":{},"body":{"modules/OAuthModule.html":{}}}],["helper.service.t",{"_index":411,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["helper.service.ts:25",{"_index":418,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["helper.service.ts:5",{"_index":415,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["helper.t",{"_index":563,"title":{},"body":{"miscellaneous/functions.html":{}}}],["henc",{"_index":657,"title":{},"body":{"index.html":{}}}],["here",{"_index":851,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["hidden",{"_index":780,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["his/her",{"_index":612,"title":{},"body":{"index.html":{}}}],["home",{"_index":877,"title":{},"body":{"additional-documentation/callback-after-login.html":{}}}],["homecompon",{"_index":645,"title":{},"body":{"index.html":{}}}],["hook",{"_index":73,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"index.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{}}}],["http",{"_index":522,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["http://localhost:8080",{"_index":625,"title":{},"body":{"index.html":{}}}],["http://localhost:8080/#/hom",{"_index":904,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["http://openid.net/specs/openid",{"_index":244,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["http://www.angular.at/api",{"_index":724,"title":{},"body":{"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["http_interceptor",{"_index":344,"title":{},"body":{"modules/OAuthModule.html":{}}}],["httpclient",{"_index":716,"title":{},"body":{"index.html":{}}}],["httpclientmodul",{"_index":345,"title":{},"body":{"modules/OAuthModule.html":{}}}],["httperrorrespons",{"_index":140,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["httpevent",{"_index":137,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["httphandler",{"_index":127,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["httpheader",{"_index":717,"title":{},"body":{"index.html":{}}}],["httpinterceptor",{"_index":138,"title":{"additional-documentation/working-with-httpinterceptors.html":{}},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["httpmodul",{"_index":642,"title":{},"body":{"index.html":{}}}],["httpparametercodec",{"_index":448,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["httprequest",{"_index":125,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["httprespons",{"_index":139,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["https://github.com/lankaapura/angular",{"_index":935,"title":{},"body":{"additional-documentation/server-side-rendering.html":{}}}],["https://github.com/manfredsteyer/angular",{"_index":581,"title":{},"body":{"index.html":{}}}],["https://manfredsteyer.github.io/angular",{"_index":583,"title":{},"body":{"index.html":{}}}],["https://medium.com/lankapura/angular",{"_index":933,"title":{},"body":{"additional-documentation/server-side-rendering.html":{}}}],["https://steyer",{"_index":659,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["id",{"_index":235,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["id_token",{"_index":45,"title":{"additional-documentation/adapt-id_token-validation.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"index.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-password-flow.html":{}}}],["id_token'",{"_index":47,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["id_token_encryption_alg_values_support",{"_index":282,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["id_token_encryption_enc_values_support",{"_index":283,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["id_token_signing_alg_values_support",{"_index":281,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["idclaim",{"_index":236,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["ident",{"_index":574,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["identityserv",{"_index":596,"title":{},"body":{"index.html":{}}}],["idsvr",{"_index":937,"title":{},"body":{"additional-documentation/server-side-rendering.html":{}}}],["idtoken",{"_index":66,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["idtokenclaim",{"_index":69,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["idtokenclaimsjson",{"_index":238,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["idtokenexpiresat",{"_index":240,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["idtokenhead",{"_index":68,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["idtokenheaderjson",{"_index":239,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["ifram",{"_index":189,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["implcit",{"_index":983,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["implemant",{"_index":855,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["implement",{"_index":10,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"changelog.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["implicit",{"_index":508,"title":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["import",{"_index":131,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/NullValidationHandler.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"injectables/UrlHelperService.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{}}}],["includ",{"_index":203,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index.html",{"_index":662,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["infer",{"_index":42,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["inferhashalgorithm",{"_index":21,"title":{},"body":{"classes/AbstractValidationHandler.html":{}}}],["inferhashalgorithm(jwthead",{"_index":39,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["info",{"_index":2,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/using-password-flow.html":{}}}],["info.st",{"_index":774,"title":{},"body":{"additional-documentation/preserving-state-(like-the-requested-url).html":{}}}],["inform",{"_index":732,"title":{},"body":{"index.html":{},"additional-documentation/events.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/original-config-api.html":{}}}],["initi",{"_index":893,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["initialnavig",{"_index":899,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["initimplicitflow",{"_index":690,"title":{},"body":{"index.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{}}}],["inject",{"_index":132,"title":{"injectables/UrlHelperService.html":{}},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"injectables/UrlHelperService.html":{},"overview.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["injectiontoken('auth_config",{"_index":760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["instal",{"_index":639,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":712,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["instead",{"_index":184,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["interact",{"_index":785,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["intercept",{"_index":114,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{}}}],["intercept(req",{"_index":124,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["interceptor",{"_index":110,"title":{"interceptors/DefaultOAuthInterceptor.html":{}},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["interceptors/default",{"_index":350,"title":{},"body":{"modules/OAuthModule.html":{}}}],["interceptors/resourc",{"_index":349,"title":{},"body":{"modules/OAuthModule.html":{}}}],["interfac",{"_index":65,"title":{"interfaces/ParsedIdToken.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"interfaces/ValidationParams.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"overview.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["introduc",{"_index":656,"title":{},"body":{"index.html":{}}}],["invalid_nonce_in_st",{"_index":311,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["ionic",{"_index":741,"title":{},"body":{"index.html":{}}}],["isn't",{"_index":293,"title":{},"body":{"classes/NullValidationHandler.html":{},"additional-documentation/using-password-flow.html":{}}}],["issu",{"_index":779,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["issuer",{"_index":262,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/session-checks.html":{}}}],["issuer'",{"_index":531,"title":{},"body":{"changelog.html":{}}}],["java",{"_index":579,"title":{},"body":{"index.html":{}}}],["job",{"_index":900,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["js",{"_index":552,"title":{},"body":{"dependencies.html":{},"additional-documentation/using-systemjs.html":{}}}],["jsrasign",{"_index":573,"title":{},"body":{"index.html":{}}}],["jsrsasign",{"_index":554,"title":{},"body":{"dependencies.html":{},"additional-documentation/using-systemjs.html":{}}}],["jwk",{"_index":70,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["jwks_load_error",{"_index":310,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["jwks_uri",{"_index":270,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["jwksvalidationhandl",{"_index":675,"title":{},"body":{"index.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["jwksvalidationhandler();in",{"_index":910,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{}}}],["jwtheader",{"_index":46,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["jwtheader['alg",{"_index":99,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["k",{"_index":455,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["keep",{"_index":795,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["kevin",{"_index":954,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["key",{"_index":257,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["keycloak",{"_index":577,"title":{},"body":{"index.html":{}}}],["kick",{"_index":970,"title":{},"body":{"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["known",{"_index":775,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["known/openid",{"_index":999,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["later",{"_index":909,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-password-flow.html":{}}}],["lead",{"_index":862,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/session-checks.html":{}}}],["leftmosthalf",{"_index":84,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["legend",{"_index":746,"title":{},"body":{"overview.html":{}}}],["leverag",{"_index":649,"title":{},"body":{"index.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["lib",{"_index":872,"title":{},"body":{"additional-documentation/callback-after-login.html":{},"additional-documentation/using-password-flow.html":{}}}],["librari",{"_index":571,"title":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}},"body":{"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["life",{"_index":830,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["line",{"_index":807,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/using-password-flow.html":{}}}],["list",{"_index":850,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/events.html":{}}}],["load",{"_index":797,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["loaddiscoverydocumentandtrylogin",{"_index":488,"title":{},"body":{"changelog.html":{}}}],["loadkey",{"_index":71,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["local",{"_index":529,"title":{},"body":{"changelog.html":{},"additional-documentation/session-checks.html":{}}}],["localhost:[8080",{"_index":633,"title":{},"body":{"index.html":{}}}],["localstorag",{"_index":225,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["location.origin",{"_index":800,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["locationstrategi",{"_index":892,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["log",{"_index":471,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/using-password-flow.html":{}}}],["loggin",{"_index":1004,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["login",{"_index":501,"title":{"additional-documentation/callback-after-login.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["loginopt",{"_index":171,"title":{"classes/LoginOptions.html":{}},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["logoff",{"_index":693,"title":{},"body":{"index.html":{}}}],["logout",{"_index":328,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}}}],["look",{"_index":729,"title":{},"body":{"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["lower",{"_index":722,"title":{},"body":{"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["main",{"_index":798,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/using-systemjs.html":{}}}],["major",{"_index":600,"title":{},"body":{"index.html":{}}}],["make",{"_index":15,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/using-password-flow.html":{}}}],["manag",{"_index":497,"title":{},"body":{"changelog.html":{},"additional-documentation/session-checks.html":{}}}],["manual",{"_index":901,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["map",{"_index":966,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["match",{"_index":109,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["max/geheim",{"_index":627,"title":{},"body":{"index.html":{}}}],["mean",{"_index":499,"title":{},"body":{"changelog.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{}}}],["mention",{"_index":620,"title":{},"body":{"index.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/original-config-api.html":{}}}],["messag",{"_index":210,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["meta",{"_index":958,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["method",{"_index":13,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["mind",{"_index":796,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["minut",{"_index":737,"title":{},"body":{"index.html":{}}}],["miscellan",{"_index":560,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["modul",{"_index":336,"title":{"modules/OAuthModule.html":{},"modules.html":{}},"body":{"modules/OAuthModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["module.config",{"_index":148,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"modules/OAuthModule.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["module.config.t",{"_index":368,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{}}}],["module.config.ts:11",{"_index":384,"title":{},"body":{"classes/OAuthResourceServerConfig.html":{}}}],["module.config.ts:12",{"_index":385,"title":{},"body":{"classes/OAuthResourceServerConfig.html":{}}}],["module.config.ts:2",{"_index":371,"title":{},"body":{"classes/OAuthModuleConfig.html":{}}}],["moduleconfig",{"_index":120,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["modulewithprovid",{"_index":341,"title":{},"body":{"modules/OAuthModule.html":{}}}],["more",{"_index":731,"title":{},"body":{"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["msec",{"_index":823,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["multi",{"_index":366,"title":{},"body":{"modules/OAuthModule.html":{}}}],["name",{"_index":34,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"injectables/UrlHelperService.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["navig",{"_index":894,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["net",{"_index":597,"title":{},"body":{"index.html":{}}}],["net/.net",{"_index":575,"title":{},"body":{"index.html":{}}}],["new",{"_index":103,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["next",{"_index":126,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["next.handle(req",{"_index":158,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["next.handle(req).catch(err",{"_index":869,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["ngmodul",{"_index":340,"title":{},"body":{"modules/OAuthModule.html":{},"index.html":{}}}],["node_modules/jsrsasign/lib/jsrsasign",{"_index":967,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["nonc",{"_index":202,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["note",{"_index":477,"title":{},"body":{"changelog.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["noth",{"_index":294,"title":{},"body":{"classes/NullValidationHandler.html":{}}}],["notif",{"_index":495,"title":{},"body":{"changelog.html":{},"additional-documentation/session-checks.html":{}}}],["notifi",{"_index":500,"title":{},"body":{"changelog.html":{},"additional-documentation/session-checks.html":{}}}],["npm",{"_index":640,"title":{},"body":{"index.html":{}}}],["null",{"_index":229,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"modules/OAuthModule.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"index.html":{}}}],["nullvalidationhandl",{"_index":291,"title":{"classes/NullValidationHandler.html":{}},"body":{"classes/NullValidationHandler.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["number",{"_index":241,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["oauth",{"_index":135,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"modules/OAuthModule.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["oauth.interceptor",{"_index":351,"title":{},"body":{"modules/OAuthModule.html":{}}}],["oauth.interceptor.t",{"_index":113,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["oauth.interceptor.ts:18",{"_index":122,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["oauth.interceptor.ts:32",{"_index":128,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["oauth2",{"_index":193,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-systemjs.html":{}}}],["oauth2/oidc",{"_index":650,"title":{},"body":{"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["oautherrorev",{"_index":300,"title":{"classes/OAuthErrorEvent.html":{}},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["oauthev",{"_index":303,"title":{"classes/OAuthEvent.html":{}},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["oauthinfoev",{"_index":333,"title":{"classes/OAuthInfoEvent.html":{}},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["oauthmodul",{"_index":337,"title":{"modules/OAuthModule.html":{}},"body":{"modules/OAuthModule.html":{},"index.html":{},"modules.html":{}}}],["oauthmodule.forroot",{"_index":643,"title":{},"body":{"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["oauthmoduleconfig",{"_index":121,"title":{"classes/OAuthModuleConfig.html":{}},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["oauthnoopresourceservererrorhandl",{"_index":348,"title":{"classes/OAuthNoopResourceServerErrorHandler.html":{}},"body":{"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["oauthresourceserverconfig",{"_index":370,"title":{"classes/OAuthResourceServerConfig.html":{}},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{}}}],["oauthresourceservererrorhandl",{"_index":119,"title":{"classes/OAuthResourceServerErrorHandler.html":{}},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["oauthservic",{"_index":134,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"modules/OAuthModule.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["oauthstorag",{"_index":117,"title":{"classes/OAuthStorage.html":{}},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"modules/OAuthModule.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["oauthsuccessev",{"_index":330,"title":{"classes/OAuthSuccessEvent.html":{}},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["object",{"_index":40,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["observ",{"_index":130,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"changelog.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["offline_access",{"_index":985,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["oidc",{"_index":201,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["oidc.umd.j",{"_index":962,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["oidc/angular",{"_index":584,"title":{},"body":{"index.html":{}}}],["oidc/doc",{"_index":585,"title":{},"body":{"index.html":{}}}],["oidcdiscoverydoc",{"_index":261,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["oidic.module.t",{"_index":339,"title":{},"body":{"modules/OAuthModule.html":{},"miscellaneous/functions.html":{}}}],["ok",{"_index":813,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["okta",{"_index":735,"title":{},"body":{"index.html":{}}}],["on",{"_index":186,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["onloginerror",{"_index":179,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["ontokenreceiv",{"_index":180,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/callback-after-login.html":{}}}],["openid",{"_index":258,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["option",{"_index":36,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"classes/ValidationHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"miscellaneous/functions.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/session-checks.html":{}}}],["origin",{"_index":481,"title":{"additional-documentation/original-config-api.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["otherparam",{"_index":884,"title":{},"body":{"additional-documentation/custom-query-parameters.html":{}}}],["otherwis",{"_index":517,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["out",{"_index":491,"title":{},"body":{"changelog.html":{},"index.html":{},"overview.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}}}],["output",{"_index":803,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/callback-after-login.html":{}}}],["over",{"_index":831,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["overrid",{"_index":17,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["overview",{"_index":745,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":631,"title":{},"body":{"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["packag",{"_index":533,"title":{"dependencies.html":{}},"body":{"additional-documentation/adapt-id_token-validation.html":{}}}],["page",{"_index":652,"title":{"additional-documentation/getting-started.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}},"body":{"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["pair",{"_index":429,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["param",{"_index":58,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["paramet",{"_index":32,"title":{"additional-documentation/custom-query-parameters.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"injectables/UrlHelperService.html":{},"classes/ValidationHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"miscellaneous/functions.html":{},"additional-documentation/custom-query-parameters.html":{}}}],["params.idtokenclaims['at_hash'].replace(/=/g",{"_index":96,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["parent.postmessage(location.hash",{"_index":799,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["pars",{"_index":48,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["parsedidtoken",{"_index":237,"title":{"interfaces/ParsedIdToken.html":{}},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["parsequerystr",{"_index":413,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["parsequerystring(querystr",{"_index":417,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["pass",{"_index":30,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"index.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["passt",{"_index":174,"title":{},"body":{"classes/LoginOptions.html":{}}}],["password",{"_index":447,"title":{"additional-documentation/using-password-flow.html":{}},"body":{"classes/WebHttpUrlEncodingCodec.html":{},"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["path",{"_index":727,"title":{},"body":{"index.html":{}}}],["pathlocationstrategi",{"_index":590,"title":{},"body":{"index.html":{}}}],["perform",{"_index":809,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/session-checks.html":{}}}],["permiss",{"_index":665,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["perspect",{"_index":974,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["pipe(catcherror(err",{"_index":169,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["pleas",{"_index":763,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["possibl",{"_index":502,"title":{},"body":{"changelog.html":{},"additional-documentation/using-password-flow.html":{}}}],["post",{"_index":932,"title":{},"body":{"additional-documentation/server-side-rendering.html":{}}}],["ppanthoni",{"_index":960,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["pr",{"_index":605,"title":{},"body":{"index.html":{}}}],["practic",{"_index":197,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["prefix",{"_index":720,"title":{},"body":{"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["preserv",{"_index":768,"title":{"additional-documentation/preserving-state-(like-the-requested-url).html":{}},"body":{"additional-documentation/preserving-state-(like-the-requested-url).html":{}}}],["prevent",{"_index":817,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["privat",{"_index":149,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["profil",{"_index":518,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["project'",{"_index":938,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["projects/.../angular",{"_index":564,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../base64",{"_index":562,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../events.t",{"_index":752,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../jwk",{"_index":757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../tokens.t",{"_index":755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/lib/src/angular",{"_index":338,"title":{},"body":{"modules/OAuthModule.html":{},"miscellaneous/functions.html":{}}}],["projects/lib/src/base64",{"_index":565,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/lib/src/encoder.t",{"_index":443,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["projects/lib/src/encoder.ts:10",{"_index":462,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["projects/lib/src/encoder.ts:14",{"_index":454,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["projects/lib/src/encoder.ts:18",{"_index":457,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["projects/lib/src/encoder.ts:6",{"_index":460,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["projects/lib/src/events.t",{"_index":301,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["projects/lib/src/events.ts:24",{"_index":334,"title":{},"body":{"classes/OAuthEvent.html":{}}}],["projects/lib/src/events.ts:28",{"_index":393,"title":{},"body":{"classes/OAuthSuccessEvent.html":{}}}],["projects/lib/src/events.ts:34",{"_index":335,"title":{},"body":{"classes/OAuthInfoEvent.html":{}}}],["projects/lib/src/events.ts:40",{"_index":307,"title":{},"body":{"classes/OAuthErrorEvent.html":{}}}],["projects/lib/src/interceptors/default",{"_index":112,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["projects/lib/src/interceptors/resourc",{"_index":377,"title":{},"body":{"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{}}}],["projects/lib/src/oauth",{"_index":367,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{}}}],["projects/lib/src/token",{"_index":5,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/NullValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"miscellaneous/variables.html":{}}}],["projects/lib/src/tokens.t",{"_index":759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/lib/src/types.t",{"_index":172,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["projects/lib/src/types.ts:11",{"_index":213,"title":{},"body":{"classes/LoginOptions.html":{}}}],["projects/lib/src/types.ts:17",{"_index":215,"title":{},"body":{"classes/LoginOptions.html":{}}}],["projects/lib/src/types.ts:25",{"_index":206,"title":{},"body":{"classes/LoginOptions.html":{}}}],["projects/lib/src/types.ts:32",{"_index":181,"title":{},"body":{"classes/LoginOptions.html":{}}}],["projects/lib/src/types.ts:42",{"_index":190,"title":{},"body":{"classes/LoginOptions.html":{}}}],["projects/lib/src/types.ts:52",{"_index":390,"title":{},"body":{"classes/OAuthStorage.html":{}}}],["projects/lib/src/types.ts:53",{"_index":391,"title":{},"body":{"classes/OAuthStorage.html":{}}}],["projects/lib/src/types.ts:54",{"_index":392,"title":{},"body":{"classes/OAuthStorage.html":{}}}],["projects/lib/src/types.ts:62",{"_index":402,"title":{},"body":{"classes/ReceivedTokens.html":{}}}],["projects/lib/src/types.ts:63",{"_index":400,"title":{},"body":{"classes/ReceivedTokens.html":{}}}],["projects/lib/src/types.ts:64",{"_index":401,"title":{},"body":{"classes/ReceivedTokens.html":{}}}],["projects/lib/src/types.ts:65",{"_index":403,"title":{},"body":{"classes/ReceivedTokens.html":{}}}],["projects/lib/src/types.ts:72",{"_index":394,"title":{},"body":{"interfaces/ParsedIdToken.html":{}}}],["projects/lib/src/types.ts:73",{"_index":395,"title":{},"body":{"interfaces/ParsedIdToken.html":{}}}],["projects/lib/src/types.ts:74",{"_index":398,"title":{},"body":{"interfaces/ParsedIdToken.html":{}}}],["projects/lib/src/types.ts:75",{"_index":396,"title":{},"body":{"interfaces/ParsedIdToken.html":{}}}],["projects/lib/src/types.ts:76",{"_index":399,"title":{},"body":{"interfaces/ParsedIdToken.html":{}}}],["projects/lib/src/types.ts:77",{"_index":397,"title":{},"body":{"interfaces/ParsedIdToken.html":{}}}],["projects/lib/src/types.ts:85",{"_index":404,"title":{},"body":{"interfaces/TokenResponse.html":{}}}],["projects/lib/src/types.ts:86",{"_index":409,"title":{},"body":{"interfaces/TokenResponse.html":{}}}],["projects/lib/src/types.ts:87",{"_index":405,"title":{},"body":{"interfaces/TokenResponse.html":{}}}],["projects/lib/src/types.ts:88",{"_index":406,"title":{},"body":{"interfaces/TokenResponse.html":{}}}],["projects/lib/src/types.ts:89",{"_index":407,"title":{},"body":{"interfaces/TokenResponse.html":{}}}],["projects/lib/src/types.ts:90",{"_index":408,"title":{},"body":{"interfaces/TokenResponse.html":{}}}],["projects/lib/src/types.ts:98",{"_index":434,"title":{},"body":{"interfaces/UserInfo.html":{}}}],["projects/lib/src/url",{"_index":410,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["promis",{"_index":63,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["promise.resolve(nul",{"_index":299,"title":{},"body":{"classes/NullValidationHandler.html":{}}}],["properti",{"_index":176,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["protect",{"_index":20,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["provd",{"_index":852,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["provid",{"_index":362,"title":{},"body":{"modules/OAuthModule.html":{},"changelog.html":{},"index.html":{},"overview.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["provider'",{"_index":654,"title":{},"body":{"index.html":{}}}],["public",{"_index":75,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"injectables/UrlHelperService.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["purpos",{"_index":874,"title":{},"body":{"additional-documentation/callback-after-login.html":{}}}],["put",{"_index":848,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["pwa",{"_index":739,"title":{},"body":{"index.html":{}}}],["queri",{"_index":614,"title":{"additional-documentation/custom-query-parameters.html":{}},"body":{"index.html":{},"additional-documentation/custom-query-parameters.html":{}}}],["querystr",{"_index":419,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["querystring.split",{"_index":433,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["question",{"_index":922,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["questionmarkposit",{"_index":424,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["quit",{"_index":981,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["rc.0",{"_index":557,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":771,"title":{},"body":{"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["readm",{"_index":766,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["readonli",{"_index":331,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["reason",{"_index":306,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["receiv",{"_index":56,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{}}}],["received_first_token",{"_index":309,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["receivedtoken",{"_index":217,"title":{"classes/ReceivedTokens.html":{}},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["redhat",{"_index":578,"title":{},"body":{"index.html":{}}}],["redhat'",{"_index":598,"title":{},"body":{"index.html":{}}}],["redirect",{"_index":610,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["redirecturi",{"_index":632,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/session-checks.html":{}}}],["refresh",{"_index":188,"title":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/using-password-flow.html":{}}}],["refresh.html",{"_index":638,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/session-checks.html":{}}}],["refresh.html\";pleas",{"_index":794,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["refresh_token",{"_index":251,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["regard",{"_index":617,"title":{},"body":{"index.html":{},"additional-documentation/using-systemjs.html":{}}}],["regist",{"_index":373,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["registerd",{"_index":664,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/original-config-api.html":{}}}],["registration_endpoint",{"_index":271,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["regular",{"_index":608,"title":{},"body":{"index.html":{}}}],["relat",{"_index":845,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/using-password-flow.html":{}}}],["relax",{"_index":525,"title":{},"body":{"changelog.html":{}}}],["relay",{"_index":523,"title":{},"body":{"changelog.html":{}}}],["releas",{"_index":476,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["removeitem",{"_index":388,"title":{},"body":{"classes/OAuthStorage.html":{}}}],["removeitem(key",{"_index":230,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["render",{"_index":929,"title":{"additional-documentation/server-side-rendering.html":{}},"body":{"additional-documentation/server-side-rendering.html":{}}}],["replace(/=/g",{"_index":94,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["replace(/\\+/g",{"_index":91,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["replace(/\\//g",{"_index":92,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["repres",{"_index":233,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["req",{"_index":129,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["req.clon",{"_index":167,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["req.head",{"_index":867,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["req.headers.set('author",{"_index":166,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["req.url.tolowercas",{"_index":156,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["request",{"_index":666,"title":{"additional-documentation/preserving-state-(like-the-requested-url).html":{}},"body":{"index.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["request_object_signing_alg_values_support",{"_index":284,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["requir",{"_index":756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require','jsrsasign",{"_index":968,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["require('jsrsasign",{"_index":762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requirehttp",{"_index":526,"title":{},"body":{"changelog.html":{}}}],["reset",{"_index":748,"title":{},"body":{"overview.html":{}}}],["resourc",{"_index":145,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/using-password-flow.html":{}}}],["resourceserv",{"_index":369,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["resourceservererrorhandl",{"_index":372,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{}}}],["respect",{"_index":721,"title":{},"body":{"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["respond",{"_index":783,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["respons",{"_index":242,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["response_modes_support",{"_index":275,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["response_types_support",{"_index":273,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["result",{"_index":108,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["return",{"_index":38,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/NullValidationHandler.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"injectables/UrlHelperService.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/using-password-flow.html":{}}}],["risk",{"_index":296,"title":{},"body":{"classes/NullValidationHandler.html":{}}}],["root",{"_index":895,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["rout",{"_index":725,"title":{"additional-documentation/routing-with-the-hashstrategy.html":{}},"body":{"index.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["router",{"_index":589,"title":{},"body":{"index.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["routermodule.forroot(app_rout",{"_index":897,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["rs",{"_index":758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rule",{"_index":524,"title":{},"body":{"changelog.html":{}}}],["run",{"_index":992,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["runn",{"_index":624,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":142,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"dependencies.html":{}}}],["rxjs/add/operator/catch",{"_index":866,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["rxjs/observ",{"_index":865,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["rxjs/oper",{"_index":144,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["safe",{"_index":995,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["same",{"_index":792,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["sampl",{"_index":580,"title":{},"body":{"index.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["saveimport",{"_index":641,"title":{},"body":{"index.html":{}}}],["scaffold",{"_index":572,"title":{},"body":{"index.html":{}}}],["scope",{"_index":252,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["scopes_support",{"_index":272,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["second",{"_index":825,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["secret",{"_index":987,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["section",{"_index":647,"title":{},"body":{"index.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/using-password-flow.html":{}}}],["secur",{"_index":199,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["see",{"_index":475,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/events.html":{},"additional-documentation/using-password-flow.html":{}}}],["selector",{"_index":678,"title":{},"body":{"index.html":{}}}],["send",{"_index":374,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["sendaccesstoken",{"_index":162,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["sens",{"_index":991,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["separatorindex",{"_index":430,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["server",{"_index":146,"title":{"additional-documentation/server-side-rendering.html":{}},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["server'",{"_index":619,"title":{},"body":{"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}}}],["server.azurewebsites.net/ident",{"_index":660,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/session-checks.html":{},"additional-documentation/original-config-api.html":{}}}],["server.azurewebsites.net/identity/.wel",{"_index":998,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["server.azurewebsites.net/identity/connect/author",{"_index":940,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}}}],["server.azurewebsites.net/identity/connect/endsess",{"_index":948,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}}}],["server.azurewebsites.net/identity/connect/token",{"_index":1002,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["server.azurewebsites.net/identity/connect/userinfo",{"_index":1007,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["servic",{"_index":136,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"modules/OAuthModule.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["service_document",{"_index":289,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["session",{"_index":493,"title":{"additional-documentation/session-checks.html":{}},"body":{"changelog.html":{},"additional-documentation/session-checks.html":{}}}],["session_chang",{"_index":325,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["session_error",{"_index":326,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["session_termin",{"_index":327,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/session-checks.html":{}}}],["session_terminated').subscribe(",{"_index":926,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["sessionchecksen",{"_index":923,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["sessionstorag",{"_index":226,"title":{},"body":{"classes/LoginOptions.html":{},"modules/OAuthModule.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["set",{"_index":191,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["set('author",{"_index":868,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["setitem",{"_index":389,"title":{},"body":{"classes/OAuthStorage.html":{}}}],["setitem(key",{"_index":231,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["setstorag",{"_index":520,"title":{},"body":{"changelog.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["setup",{"_index":787,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["setupautomaticsilentrefresh",{"_index":487,"title":{},"body":{"changelog.html":{}}}],["setupinterceptor",{"_index":358,"title":{},"body":{"modules/OAuthModule.html":{}}}],["sha",{"_index":106,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["sha256(accesstoken",{"_index":81,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["share",{"_index":961,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["ship",{"_index":979,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["short",{"_index":1014,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["show",{"_index":648,"title":{},"body":{"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/using-password-flow.html":{}}}],["side",{"_index":223,"title":{"additional-documentation/server-side-rendering.html":{}},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/server-side-rendering.html":{}}}],["sign",{"_index":490,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}}}],["signatur",{"_index":62,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"index.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["silent",{"_index":187,"title":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/session-checks.html":{}}}],["silent_refresh_error",{"_index":320,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["silent_refresh_timeout",{"_index":322,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["silently_refresh",{"_index":321,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["silentrefresh",{"_index":810,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["silentrefreshredirecturi",{"_index":789,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/session-checks.html":{}}}],["siletrefreshtimeout",{"_index":822,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["similar",{"_index":982,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["simpl",{"_index":219,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["singl",{"_index":489,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}}}],["skip",{"_index":295,"title":{},"body":{"classes/NullValidationHandler.html":{},"index.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-password-flow.html":{}}}],["snippet",{"_index":697,"title":{},"body":{"index.html":{}}}],["solut",{"_index":776,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["somevalu",{"_index":885,"title":{},"body":{"additional-documentation/custom-query-parameters.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"index.html":{}}}],["spa",{"_index":629,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["spa'",{"_index":663,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["spec",{"_index":498,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/session-checks.html":{}}}],["specif",{"_index":671,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/original-config-api.html":{}}}],["standard",{"_index":989,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["start",{"_index":468,"title":{"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/custom-query-parameters.html":{}}}],["startup",{"_index":969,"title":{},"body":{"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["state",{"_index":194,"title":{"additional-documentation/preserving-state-(like-the-requested-url).html":{}},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/events.html":{}}}],["static",{"_index":356,"title":{},"body":{"modules/OAuthModule.html":{}}}],["statu",{"_index":494,"title":{},"body":{"changelog.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["still",{"_index":482,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["storag",{"_index":220,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["store",{"_index":221,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["str",{"_index":567,"title":{},"body":{"miscellaneous/functions.html":{}}}],["streamlin",{"_index":484,"title":{},"body":{"changelog.html":{}}}],["strictdiscoverydocumentvalid",{"_index":532,"title":{},"body":{"changelog.html":{}}}],["string",{"_index":24,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/events.html":{}}}],["strong",{"_index":977,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["structur",{"_index":507,"title":{},"body":{"changelog.html":{}}}],["sub",{"_index":256,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["subject_types_support",{"_index":277,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["succeed",{"_index":770,"title":{},"body":{"additional-documentation/preserving-state-(like-the-requested-url).html":{}}}],["success",{"_index":871,"title":{},"body":{"additional-documentation/callback-after-login.html":{}}}],["successfulli",{"_index":214,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{}}}],["such",{"_index":853,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/using-password-flow.html":{}}}],["suit",{"_index":975,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["suitabl",{"_index":651,"title":{},"body":{"index.html":{}}}],["super(typ",{"_index":332,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["support",{"_index":105,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"index.html":{},"additional-documentation/session-checks.html":{}}}],["sure",{"_index":801,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["switch",{"_index":719,"title":{},"body":{"index.html":{}}}],["system.config",{"_index":957,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["systemj",{"_index":952,"title":{"additional-documentation/using-systemjs.html":{}},"body":{"additional-documentation/using-systemjs.html":{}}}],["take",{"_index":841,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["task",{"_index":486,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/events.html":{}}}],["tell",{"_index":706,"title":{},"body":{"index.html":{}}}],["templat",{"_index":698,"title":{},"body":{"index.html":{}}}],["templateurl",{"_index":680,"title":{},"body":{"index.html":{}}}],["tenant",{"_index":882,"title":{},"body":{"additional-documentation/custom-query-parameters.html":{}}}],["termin",{"_index":928,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["test",{"_index":530,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["testen",{"_index":702,"title":{},"body":{"index.html":{}}}],["thank",{"_index":953,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["that'",{"_index":993,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["then(info",{"_index":811,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["third",{"_index":839,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["this.authstorage.getitem('access_token",{"_index":164,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["this.calchash(params.accesstoken",{"_index":80,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["this.checkurl(url",{"_index":161,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["this.configurewithnewconfigapi",{"_index":683,"title":{},"body":{"index.html":{}}}],["this.errorhandler.handleerror(err",{"_index":170,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["this.inferhashalgorithm(params.idtokenhead",{"_index":78,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["this.moduleconfig",{"_index":157,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["this.moduleconfig.resourceserv",{"_index":159,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["this.moduleconfig.resourceserver.allowedurl",{"_index":160,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["this.moduleconfig.resourceserver.allowedurls.find(u",{"_index":153,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["this.moduleconfig.resourceserver.sendaccesstoken",{"_index":163,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["this.oauthservice.clientid",{"_index":942,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.configure(authconfig",{"_index":685,"title":{},"body":{"index.html":{}}}],["this.oauthservice.customqueryparam",{"_index":881,"title":{},"body":{"additional-documentation/custom-query-parameters.html":{}}}],["this.oauthservice.dummyclientsecret",{"_index":996,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.events.filter(",{"_index":924,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["this.oauthservice.events.subscribe(",{"_index":886,"title":{},"body":{"additional-documentation/events.html":{}}}],["this.oauthservice.fetchtokenusingpasswordflow('max",{"_index":1010,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.fetchtokenusingpasswordflowandloaduserprofile('max",{"_index":1015,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.getaccesstoken",{"_index":715,"title":{},"body":{"index.html":{}}}],["this.oauthservice.getidentityclaim",{"_index":695,"title":{},"body":{"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.initimplicitflow",{"_index":692,"title":{},"body":{"index.html":{}}}],["this.oauthservice.initimplicitflow('http://www.myurl.com/x/y/z');aft",{"_index":769,"title":{},"body":{"additional-documentation/preserving-state-(like-the-requested-url).html":{}}}],["this.oauthservice.issu",{"_index":971,"title":{},"body":{"additional-documentation/original-config-api.html":{}}}],["this.oauthservice.loaddiscoverydocument().then",{"_index":972,"title":{},"body":{"additional-documentation/original-config-api.html":{}}}],["this.oauthservice.loaddiscoverydocument(url).then",{"_index":1000,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.loaddiscoverydocumentandlogin",{"_index":708,"title":{},"body":{"index.html":{}}}],["this.oauthservice.loaddiscoverydocumentandtrylogin",{"_index":687,"title":{},"body":{"index.html":{}}}],["this.oauthservice.loaduserprofil",{"_index":1012,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.loginurl",{"_index":939,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}}}],["this.oauthservice.logout",{"_index":694,"title":{},"body":{"index.html":{}}}],["this.oauthservice.logouturl",{"_index":947,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}}}],["this.oauthservice.redirecturi",{"_index":941,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["this.oauthservice.refreshtoken().then",{"_index":1018,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.scop",{"_index":943,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.setstorage(sessionstorag",{"_index":945,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.setupautomaticsilentrefresh();bi",{"_index":826,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["this.oauthservice.silentrefreshredirecturi",{"_index":793,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["this.oauthservice.tokenendpoint",{"_index":1001,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.tokenvalidationhandl",{"_index":686,"title":{},"body":{"index.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["this.oauthservice.trylogin",{"_index":772,"title":{},"body":{"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["this.oauthservice.trylogin().then(_",{"_index":902,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["this.oauthservice.userinfoendpoint",{"_index":1006,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["this.parsequerystring(hash",{"_index":428,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["this.router.navig",{"_index":903,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["three",{"_index":668,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/original-config-api.html":{}}}],["through",{"_index":492,"title":{},"body":{"changelog.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["throw",{"_index":102,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["throwerror",{"_index":382,"title":{},"body":{"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{}}}],["throwerror(err",{"_index":383,"title":{},"body":{"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{}}}],["time",{"_index":613,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["timeout",{"_index":820,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["timeoutfactor",{"_index":514,"title":{},"body":{"changelog.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["timespan",{"_index":821,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["togeth",{"_index":510,"title":{},"body":{"changelog.html":{},"additional-documentation/server-side-rendering.html":{}}}],["token",{"_index":74,"title":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["token'",{"_index":829,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["token(",{"_index":949,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["token_endpoint",{"_index":264,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["token_endpoint_auth_methods_support",{"_index":265,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["token_endpoint_auth_signing_alg_values_support",{"_index":266,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["token_error",{"_index":317,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["token_expir",{"_index":324,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["token_receiv",{"_index":316,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["token_refresh",{"_index":318,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["token_refresh_error",{"_index":319,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["token_typ",{"_index":249,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["token_validation_error",{"_index":323,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["tokenhash",{"_index":79,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["tokenhash.length",{"_index":86,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["tokenhash.substr(0",{"_index":85,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["tokenhashbase64",{"_index":88,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["tokenrespons",{"_index":248,"title":{"interfaces/TokenResponse.html":{}},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["tokenvalid",{"_index":906,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{}}}],["tokenvalidationhandl",{"_index":216,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["transmit",{"_index":843,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/using-password-flow.html":{}}}],["tri",{"_index":876,"title":{},"body":{"additional-documentation/callback-after-login.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["trigger",{"_index":838,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["true",{"_index":83,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/session-checks.html":{}}}],["trust",{"_index":978,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["trylogin",{"_index":175,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["ts",{"_index":944,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["tutori",{"_index":733,"title":{},"body":{"index.html":{}}}],["two",{"_index":907,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{}}}],["type",{"_index":35,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["typealias",{"_index":750,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":353,"title":{},"body":{"modules/OAuthModule.html":{}}}],["ui_locales_support",{"_index":290,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["undefin",{"_index":354,"title":{},"body":{"modules/OAuthModule.html":{}}}],["up",{"_index":674,"title":{},"body":{"index.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/session-checks.html":{}}}],["uri",{"_index":788,"title":{},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["url",{"_index":155,"title":{"additional-documentation/preserving-state-(like-the-requested-url).html":{}},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"changelog.html":{},"index.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["url.startswith(u",{"_index":154,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["urlhelperservic",{"_index":346,"title":{"injectables/UrlHelperService.html":{}},"body":{"modules/OAuthModule.html":{},"injectables/UrlHelperService.html":{}}}],["us",{"_index":16,"title":{"additional-documentation/using-systemjs.html":{},"additional-documentation/using-password-flow.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["usecas",{"_index":670,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/original-config-api.html":{}}}],["useclass",{"_index":364,"title":{},"body":{"modules/OAuthModule.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["usefactori",{"_index":363,"title":{},"body":{"modules/OAuthModule.html":{}}}],["usehash",{"_index":898,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["user",{"_index":253,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/session-checks.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["user'",{"_index":1008,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["user_profile_load",{"_index":314,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["user_profile_load_error",{"_index":315,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["userinfo",{"_index":255,"title":{"interfaces/UserInfo.html":{}},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{}}}],["userinfo_encryption_alg_values_support",{"_index":279,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["userinfo_encryption_enc_values_support",{"_index":280,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["userinfo_endpoint",{"_index":267,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["userinfo_signing_alg_values_support",{"_index":278,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["username/password",{"_index":626,"title":{},"body":{"index.html":{}}}],["username/passwort",{"_index":700,"title":{},"body":{"index.html":{}}}],["usevalu",{"_index":365,"title":{},"body":{"modules/OAuthModule.html":{}}}],["v",{"_index":458,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["valid",{"_index":53,"title":{"additional-documentation/adapt-id_token-validation.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["validateathash",{"_index":14,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/NullValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["validateathash(param",{"_index":50,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["validateathash(validationparam",{"_index":76,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/NullValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["validatesignatur",{"_index":22,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/NullValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["validatesignature(validationparam",{"_index":60,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/NullValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["validation/jwk",{"_index":761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validation/nul",{"_index":292,"title":{},"body":{"classes/NullValidationHandler.html":{}}}],["validation/valid",{"_index":6,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["validationhandl",{"_index":11,"title":{"classes/ValidationHandler.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["validationparam",{"_index":51,"title":{"interfaces/ValidationParams.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/NullValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["valu",{"_index":31,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"injectables/UrlHelperService.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"miscellaneous/variables.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{}}}],["valuetohash",{"_index":37,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["var",{"_index":713,"title":{},"body":{"index.html":{}}}],["variabl",{"_index":753,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":473,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/session-checks.html":{}}}],["via",{"_index":504,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["void",{"_index":218,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthStorage.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["voucher",{"_index":673,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["want",{"_index":704,"title":{},"body":{"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["warn",{"_index":911,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{}}}],["way",{"_index":864,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["we'v",{"_index":595,"title":{},"body":{"index.html":{}}}],["web",{"_index":622,"title":{},"body":{"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["webcomponents/custom",{"_index":545,"title":{},"body":{"dependencies.html":{}}}],["webhttpurlencodingcodec",{"_index":442,"title":{"classes/WebHttpUrlEncodingCodec.html":{}},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["webpack",{"_index":594,"title":{},"body":{"index.html":{}}}],["well",{"_index":503,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/callback-after-login.html":{}}}],["white",{"_index":849,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["window.location.hash",{"_index":420,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["window.location.origin",{"_index":661,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["within",{"_index":711,"title":{},"body":{"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["without",{"_index":784,"title":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}},"body":{"additional-documentation/refreshing-a-token-(silent-refresh).html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["work",{"_index":840,"title":{"additional-documentation/working-with-httpinterceptors.html":{}},"body":{}}],["write",{"_index":860,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["ye",{"_index":416,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["you'v",{"_index":689,"title":{},"body":{"index.html":{}}}],["zone.j",{"_index":558,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":747,"title":{},"body":{"overview.html":{}}}],["zum",{"_index":701,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractValidationHandler.html":{"url":"classes/AbstractValidationHandler.html","title":"class - AbstractValidationHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractValidationHandler\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/token-validation/validation-handler.ts\n        \n\n            \n                Description\n            \n            \n                This abstract implementation of ValidationHandler already implements\nthe method validateAtHash. However, to make use of it,\nyou have to override the method calcHash.\n\n            \n\n\n            \n                Implements\n            \n            \n                        ValidationHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Protected\n                                calcHash\n                            \n                            \n                                    Protected\n                                inferHashAlgorithm\n                            \n                            \n                                validateAtHash\n                            \n                            \n                                    \n                                validateSignature\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                                Protected\n                            calcHash\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        calcHash(valueToHash: string, algorithm: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/lib/src/token-validation/validation-handler.ts:88\n                            \n                        \n\n                \n                    \n                            Calculates the hash for the passed value by using\nthe passed hash algorithm.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        valueToHash\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        algorithm\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            inferHashAlgorithm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        inferHashAlgorithm(jwtHeader: object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/lib/src/token-validation/validation-handler.ts:71\n                            \n                        \n\n                \n                    \n                            Infers the name of the hash algorithm to use\nfrom the alg field of an id_token.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        jwtHeader\n                                                        \n                                                                    object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the id_token's parsed header\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validateAtHash\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidateAtHash(params: ValidationParams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/lib/src/token-validation/validation-handler.ts:42\n                            \n                        \n\n                \n                    \n                            Validates the at_hash in an id_token against the received access_token.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    ValidationParams\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            validateSignature\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        validateSignature(validationParams: ValidationParams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/lib/src/token-validation/validation-handler.ts:37\n                            \n                        \n\n                \n                    \n                            Validates the signature of an id_token.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validationParams\n                                                        \n                                                                    ValidationParams\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export interface ValidationParams {\n  idToken: string;\n  accessToken: string;\n  idTokenHeader: object;\n  idTokenClaims: object;\n  jwks: object;\n  loadKeys: () => Promise;\n}\n\n/**\n * Interface for Handlers that are hooked in to\n * validate tokens.\n */\nexport abstract class ValidationHandler {\n  /**\n   * Validates the signature of an id_token.\n   */\n  public abstract validateSignature(\n    validationParams: ValidationParams\n  ): Promise;\n\n  /**\n   * Validates the at_hash in an id_token against the received access_token.\n   */\n  public abstract validateAtHash(validationParams: ValidationParams): boolean;\n}\n\n/**\n * This abstract implementation of ValidationHandler already implements\n * the method validateAtHash. However, to make use of it,\n * you have to override the method calcHash.\n */\nexport abstract class AbstractValidationHandler implements ValidationHandler {\n  /**\n   * Validates the signature of an id_token.\n   */\n  abstract validateSignature(validationParams: ValidationParams): Promise;\n\n  /**\n   * Validates the at_hash in an id_token against the received access_token.\n   */\n  validateAtHash(params: ValidationParams): boolean {\n    let hashAlg = this.inferHashAlgorithm(params.idTokenHeader);\n\n    let tokenHash = this.calcHash(params.accessToken, hashAlg); // sha256(accessToken, { asString: true });\n\n    let leftMostHalf = tokenHash.substr(0, tokenHash.length / 2);\n\n    let tokenHashBase64 = btoa(leftMostHalf);\n\n    let atHash = tokenHashBase64\n      .replace(/\\+/g, '-')\n      .replace(/\\//g, '_')\n      .replace(/=/g, '');\n    let claimsAtHash = params.idTokenClaims['at_hash'].replace(/=/g, '');\n\n    if (atHash !== claimsAtHash) {\n      console.error('exptected at_hash: ' + atHash);\n      console.error('actual at_hash: ' + claimsAtHash);\n    }\n\n    return atHash === claimsAtHash;\n  }\n\n  /**\n   * Infers the name of the hash algorithm to use\n   * from the alg field of an id_token.\n   *\n   * @param jwtHeader the id_token's parsed header\n   */\n  protected inferHashAlgorithm(jwtHeader: object): string {\n    let alg: string = jwtHeader['alg'];\n\n    if (!alg.match(/^.S[0-9]{3}$/)) {\n      throw new Error('Algorithm not supported: ' + alg);\n    }\n\n    return 'sha' + alg.substr(2);\n  }\n\n  /**\n   * Calculates the hash for the passed value by using\n   * the passed hash algorithm.\n   *\n   * @param valueToHash\n   * @param algorithm\n   */\n  protected abstract calcHash(valueToHash: string, algorithm: string): string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/DefaultOAuthInterceptor.html":{"url":"interceptors/DefaultOAuthInterceptor.html","title":"interceptor - DefaultOAuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Interceptors\n  DefaultOAuthInterceptor\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/interceptors/default-oauth.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authStorage: OAuthStorage, errorHandler: OAuthResourceServerErrorHandler, moduleConfig: OAuthModuleConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/interceptors/default-oauth.interceptor.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    authStorage\n                                                  \n                                                        \n                                                                    OAuthStorage\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    errorHandler\n                                                  \n                                                        \n                                                                    OAuthResourceServerErrorHandler\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    moduleConfig\n                                                  \n                                                        \n                                                                    OAuthModuleConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/lib/src/interceptors/default-oauth.interceptor.ts:32\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, Inject, Optional } from '@angular/core';\nimport { OAuthService } from '../oauth-service';\nimport { OAuthStorage } from '../types';\nimport {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { OAuthResourceServerErrorHandler } from './resource-server-error-handler';\nimport { OAuthModuleConfig } from '../oauth-module.config';\n\n@Injectable()\nexport class DefaultOAuthInterceptor implements HttpInterceptor {\n  constructor(\n    private authStorage: OAuthStorage,\n    private errorHandler: OAuthResourceServerErrorHandler,\n    @Optional() private moduleConfig: OAuthModuleConfig\n  ) {}\n\n  private checkUrl(url: string): boolean {\n    const found = this.moduleConfig.resourceServer.allowedUrls.find(u =>\n      url.startsWith(u)\n    );\n    return !!found;\n  }\n\n  public intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    const url = req.url.toLowerCase();\n\n    if (!this.moduleConfig) {\n      return next.handle(req);\n    }\n    if (!this.moduleConfig.resourceServer) {\n      return next.handle(req);\n    }\n    if (!this.moduleConfig.resourceServer.allowedUrls) {\n      return next.handle(req);\n    }\n    if (!this.checkUrl(url)) {\n      return next.handle(req);\n    }\n\n    const sendAccessToken = this.moduleConfig.resourceServer.sendAccessToken;\n\n    if (sendAccessToken && this.authStorage.getItem('access_token')) {\n      const token = this.authStorage.getItem('access_token');\n      const header = 'Bearer ' + token;\n\n      const headers = req.headers.set('Authorization', header);\n\n      req = req.clone({ headers });\n    }\n\n    return next\n      .handle(req)\n      .pipe(catchError(err => this.errorHandler.handleError(err)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginOptions.html":{"url":"classes/LoginOptions.html","title":"class - LoginOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginOptions\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/types.ts\n        \n\n            \n                Description\n            \n            \n                Additional options that can be passt to tryLogin.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                customHashFragment\n                            \n                            \n                                    Optional\n                                disableOAuth2StateCheck\n                            \n                            \n                                    Optional\n                                onLoginError\n                            \n                            \n                                    Optional\n                                onTokenReceived\n                            \n                            \n                                    Optional\n                                validationHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            customHashFragment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        customHashFragment:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/lib/src/types.ts:32\n                            \n                        \n\n                \n                    \n                        A custom hash fragment to be used instead of the\nactual one. This is used for silent refreshes, to\npass the iframes hash fragment to this method.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            disableOAuth2StateCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        disableOAuth2StateCheck:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/lib/src/types.ts:42\n                            \n                        \n\n                \n                    \n                        Set this to true to disable the oauth2 state\ncheck which is a best practice to avoid\nsecurity attacks.\nAs OIDC defines a nonce check that includes\nthis, this can be set to true when only doing\nOIDC.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            onLoginError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onLoginError:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/lib/src/types.ts:25\n                            \n                        \n\n                \n                    \n                        Called when tryLogin detects that the auth server\nincluded an error message into the hash fragment.\nDeprecated:  Use property events on OAuthService instead.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            onTokenReceived\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onTokenReceived:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/lib/src/types.ts:11\n                            \n                        \n\n                \n                    \n                        Is called, after a token has been received and\nsuccessfully validated.\nDeprecated:  Use property events on OAuthService instead.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            validationHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        validationHandler:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/lib/src/types.ts:17\n                            \n                        \n\n                \n                    \n                        Hook, to validate the received tokens.\nDeprecated:  Use property tokenValidationHandler on OAuthService instead.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoginOptions {\n  /**\n   * Is called, after a token has been received and\n   * successfully validated.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onTokenReceived?: (receivedTokens: ReceivedTokens) => void;\n\n  /**\n   * Hook, to validate the received tokens.\n   * Deprecated:  Use property ``tokenValidationHandler`` on OAuthService instead.\n   */\n  validationHandler?: (receivedTokens: ReceivedTokens) => Promise;\n\n  /**\n   * Called when tryLogin detects that the auth server\n   * included an error message into the hash fragment.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onLoginError?: (params: object) => void;\n\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method.\n   */\n  customHashFragment?: string;\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  disableOAuth2StateCheck?: boolean;\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  abstract getItem(key: string): string | null;\n  abstract removeItem(key: string): void;\n  abstract setItem(key: string, data: string): void;\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  idToken: string;\n  accessToken: string;\n  idClaims?: object;\n  state?: string;\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string;\n  idTokenClaims: object;\n  idTokenHeader: object;\n  idTokenClaimsJson: string;\n  idTokenHeaderJson: string;\n  idTokenExpiresAt: number;\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string;\n  token_type: string;\n  expires_in: number;\n  refresh_token: string;\n  scope: string;\n  state?: string;\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string;\n  [key: string]: any;\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string;\n  authorization_endpoint: string;\n  token_endpoint: string;\n  token_endpoint_auth_methods_supported: string[];\n  token_endpoint_auth_signing_alg_values_supported: string[];\n  userinfo_endpoint: string;\n  check_session_iframe: string;\n  end_session_endpoint: string;\n  jwks_uri: string;\n  registration_endpoint: string;\n  scopes_supported: string[];\n  response_types_supported: string[];\n  acr_values_supported: string[];\n  response_modes_supported: string[];\n  grant_types_supported: string[];\n  subject_types_supported: string[];\n  userinfo_signing_alg_values_supported: string[];\n  userinfo_encryption_alg_values_supported: string[];\n  userinfo_encryption_enc_values_supported: string[];\n  id_token_signing_alg_values_supported: string[];\n  id_token_encryption_alg_values_supported: string[];\n  id_token_encryption_enc_values_supported: string[];\n  request_object_signing_alg_values_supported: string[];\n  display_values_supported: string[];\n  claim_types_supported: string[];\n  claims_supported: string[];\n  claims_parameter_supported: boolean;\n  service_documentation: string;\n  ui_locales_supported: string[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NullValidationHandler.html":{"url":"classes/NullValidationHandler.html","title":"class - NullValidationHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  NullValidationHandler\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/token-validation/null-validation-handler.ts\n        \n\n            \n                Description\n            \n            \n                A validation handler that isn't validating nothing.\nCan be used to skip validation (on your own risk).\n\n            \n\n\n            \n                Implements\n            \n            \n                        ValidationHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validateAtHash\n                            \n                            \n                                validateSignature\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validateAtHash\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidateAtHash(validationParams: ValidationParams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/lib/src/token-validation/null-validation-handler.ts:11\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validationParams\n                                                        \n                                                                    ValidationParams\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validateSignature\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidateSignature(validationParams: ValidationParams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/lib/src/token-validation/null-validation-handler.ts:8\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validationParams\n                                                        \n                                                                    ValidationParams\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { ValidationHandler, ValidationParams } from './validation-handler';\n\n/**\n * A validation handler that isn't validating nothing.\n * Can be used to skip validation (on your own risk).\n */\nexport class NullValidationHandler implements ValidationHandler {\n  validateSignature(validationParams: ValidationParams): Promise {\n    return Promise.resolve(null);\n  }\n  validateAtHash(validationParams: ValidationParams): boolean {\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthErrorEvent.html":{"url":"classes/OAuthErrorEvent.html","title":"class - OAuthErrorEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthErrorEvent\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/events.ts\n        \n\n\n            \n                Extends\n            \n            \n                    OAuthEvent\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: EventType, reason: object, params: object)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/events.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    type\n                                                  \n                                                        \n                                                                    EventType\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    reason\n                                                  \n                                                        \n                                                                    object\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    params\n                                                  \n                                                        \n                                                                    object\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export type EventType =\n  | 'discovery_document_loaded'\n  | 'received_first_token'\n  | 'jwks_load_error'\n  | 'invalid_nonce_in_state'\n  | 'discovery_document_load_error'\n  | 'discovery_document_validation_error'\n  | 'user_profile_loaded'\n  | 'user_profile_load_error'\n  | 'token_received'\n  | 'token_error'\n  | 'token_refreshed'\n  | 'token_refresh_error'\n  | 'silent_refresh_error'\n  | 'silently_refreshed'\n  | 'silent_refresh_timeout'\n  | 'token_validation_error'\n  | 'token_expires'\n  | 'session_changed'\n  | 'session_error'\n  | 'session_terminated'\n  | 'logout';\n\nexport abstract class OAuthEvent {\n  constructor(readonly type: EventType) {}\n}\n\nexport class OAuthSuccessEvent extends OAuthEvent {\n  constructor(type: EventType, readonly info: any = null) {\n    super(type);\n  }\n}\n\nexport class OAuthInfoEvent extends OAuthEvent {\n  constructor(type: EventType, readonly info: any = null) {\n    super(type);\n  }\n}\n\nexport class OAuthErrorEvent extends OAuthEvent {\n  constructor(\n    type: EventType,\n    readonly reason: object,\n    readonly params: object = null\n  ) {\n    super(type);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthEvent.html":{"url":"classes/OAuthEvent.html","title":"class - OAuthEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthEvent\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/events.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: EventType)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/events.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    type\n                                                  \n                                                        \n                                                                    EventType\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export type EventType =\n  | 'discovery_document_loaded'\n  | 'received_first_token'\n  | 'jwks_load_error'\n  | 'invalid_nonce_in_state'\n  | 'discovery_document_load_error'\n  | 'discovery_document_validation_error'\n  | 'user_profile_loaded'\n  | 'user_profile_load_error'\n  | 'token_received'\n  | 'token_error'\n  | 'token_refreshed'\n  | 'token_refresh_error'\n  | 'silent_refresh_error'\n  | 'silently_refreshed'\n  | 'silent_refresh_timeout'\n  | 'token_validation_error'\n  | 'token_expires'\n  | 'session_changed'\n  | 'session_error'\n  | 'session_terminated'\n  | 'logout';\n\nexport abstract class OAuthEvent {\n  constructor(readonly type: EventType) {}\n}\n\nexport class OAuthSuccessEvent extends OAuthEvent {\n  constructor(type: EventType, readonly info: any = null) {\n    super(type);\n  }\n}\n\nexport class OAuthInfoEvent extends OAuthEvent {\n  constructor(type: EventType, readonly info: any = null) {\n    super(type);\n  }\n}\n\nexport class OAuthErrorEvent extends OAuthEvent {\n  constructor(\n    type: EventType,\n    readonly reason: object,\n    readonly params: object = null\n  ) {\n    super(type);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthInfoEvent.html":{"url":"classes/OAuthInfoEvent.html","title":"class - OAuthInfoEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthInfoEvent\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/events.ts\n        \n\n\n            \n                Extends\n            \n            \n                    OAuthEvent\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: EventType, info: any)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/events.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    type\n                                                  \n                                                        \n                                                                    EventType\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    info\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export type EventType =\n  | 'discovery_document_loaded'\n  | 'received_first_token'\n  | 'jwks_load_error'\n  | 'invalid_nonce_in_state'\n  | 'discovery_document_load_error'\n  | 'discovery_document_validation_error'\n  | 'user_profile_loaded'\n  | 'user_profile_load_error'\n  | 'token_received'\n  | 'token_error'\n  | 'token_refreshed'\n  | 'token_refresh_error'\n  | 'silent_refresh_error'\n  | 'silently_refreshed'\n  | 'silent_refresh_timeout'\n  | 'token_validation_error'\n  | 'token_expires'\n  | 'session_changed'\n  | 'session_error'\n  | 'session_terminated'\n  | 'logout';\n\nexport abstract class OAuthEvent {\n  constructor(readonly type: EventType) {}\n}\n\nexport class OAuthSuccessEvent extends OAuthEvent {\n  constructor(type: EventType, readonly info: any = null) {\n    super(type);\n  }\n}\n\nexport class OAuthInfoEvent extends OAuthEvent {\n  constructor(type: EventType, readonly info: any = null) {\n    super(type);\n  }\n}\n\nexport class OAuthErrorEvent extends OAuthEvent {\n  constructor(\n    type: EventType,\n    readonly reason: object,\n    readonly params: object = null\n  ) {\n    super(type);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OAuthModule.html":{"url":"modules/OAuthModule.html","title":"module - OAuthModule","body":"\n                   \n\n\n\n\n  Modules\n  OAuthModule\n\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/lib/src/angular-oauth-oidic.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { OAuthStorage } from './types';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\n\nimport { OAuthService } from './oauth-service';\nimport { UrlHelperService } from './url-helper.service';\n\nimport { OAuthModuleConfig } from './oauth-module.config';\nimport {\n  OAuthResourceServerErrorHandler,\n  OAuthNoopResourceServerErrorHandler\n} from './interceptors/resource-server-error-handler';\nimport { DefaultOAuthInterceptor } from './interceptors/default-oauth.interceptor';\n\nexport function createDefaultStorage() {\n  return typeof sessionStorage !== 'undefined' ? sessionStorage : null;\n}\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [],\n  exports: []\n})\nexport class OAuthModule {\n  static forRoot(config: OAuthModuleConfig = null): ModuleWithProviders {\n    // const setupInterceptor = config && config.resourceServer && config.resourceServer.allowedUrls;\n\n    return {\n      ngModule: OAuthModule,\n      providers: [\n        OAuthService,\n        UrlHelperService,\n        { provide: OAuthStorage, useFactory: createDefaultStorage },\n        {\n          provide: OAuthResourceServerErrorHandler,\n          useClass: OAuthNoopResourceServerErrorHandler\n        },\n        { provide: OAuthModuleConfig, useValue: config },\n        {\n          provide: HTTP_INTERCEPTORS,\n          useClass: DefaultOAuthInterceptor,\n          multi: true\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthModuleConfig.html":{"url":"classes/OAuthModuleConfig.html","title":"class - OAuthModuleConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthModuleConfig\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/oauth-module.config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                resourceServer\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resourceServer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        resourceServer:     OAuthResourceServerConfig\n\n                    \n                \n                    \n                        \n                            Type :     OAuthResourceServerConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/lib/src/oauth-module.config.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class OAuthModuleConfig {\n  resourceServer: OAuthResourceServerConfig;\n}\n\nexport abstract class OAuthResourceServerConfig {\n  /**\n   * Urls for which calls should be intercepted.\n   * If there is an ResourceServerErrorHandler registered, it is used for them.\n   * If sendAccessToken is set to true, the access_token is send to them too.\n   */\n  allowedUrls: Array;\n  sendAccessToken: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthNoopResourceServerErrorHandler.html":{"url":"classes/OAuthNoopResourceServerErrorHandler.html","title":"class - OAuthNoopResourceServerErrorHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthNoopResourceServerErrorHandler\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/interceptors/resource-server-error-handler.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        OAuthResourceServerErrorHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleError(err: HttpResponse)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/lib/src/interceptors/resource-server-error-handler.ts:10\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        err\n                                                        \n                                                                    HttpResponse\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\n\nexport abstract class OAuthResourceServerErrorHandler {\n  abstract handleError(err: HttpResponse): Observable;\n}\n\nexport class OAuthNoopResourceServerErrorHandler\n  implements OAuthResourceServerErrorHandler {\n  handleError(err: HttpResponse): Observable {\n    return throwError(err);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthResourceServerConfig.html":{"url":"classes/OAuthResourceServerConfig.html","title":"class - OAuthResourceServerConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthResourceServerConfig\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/oauth-module.config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allowedUrls\n                            \n                            \n                                sendAccessToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allowedUrls\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        allowedUrls:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/lib/src/oauth-module.config.ts:11\n                            \n                        \n\n                \n                    \n                        Urls for which calls should be intercepted.\nIf there is an ResourceServerErrorHandler registered, it is used for them.\nIf sendAccessToken is set to true, the access_token is send to them too.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendAccessToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sendAccessToken:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/lib/src/oauth-module.config.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class OAuthModuleConfig {\n  resourceServer: OAuthResourceServerConfig;\n}\n\nexport abstract class OAuthResourceServerConfig {\n  /**\n   * Urls for which calls should be intercepted.\n   * If there is an ResourceServerErrorHandler registered, it is used for them.\n   * If sendAccessToken is set to true, the access_token is send to them too.\n   */\n  allowedUrls: Array;\n  sendAccessToken: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthResourceServerErrorHandler.html":{"url":"classes/OAuthResourceServerErrorHandler.html","title":"class - OAuthResourceServerErrorHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthResourceServerErrorHandler\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/interceptors/resource-server-error-handler.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleError(err: HttpResponse)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/lib/src/interceptors/resource-server-error-handler.ts:5\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        err\n                                                        \n                                                                    HttpResponse\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\n\nexport abstract class OAuthResourceServerErrorHandler {\n  abstract handleError(err: HttpResponse): Observable;\n}\n\nexport class OAuthNoopResourceServerErrorHandler\n  implements OAuthResourceServerErrorHandler {\n  handleError(err: HttpResponse): Observable {\n    return throwError(err);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthStorage.html":{"url":"classes/OAuthStorage.html","title":"class - OAuthStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthStorage\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/types.ts\n        \n\n            \n                Description\n            \n            \n                Defines a simple storage that can be used for\nstoring the tokens at client side.\nIs compatible to localStorage and sessionStorage,\nbut you can also create your own implementations.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getItem\n                            \n                            \n                                    \n                                removeItem\n                            \n                            \n                                    \n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            getItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getItem(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/lib/src/types.ts:52\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string | null\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            removeItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeItem(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/lib/src/types.ts:53\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            setItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setItem(key: string, data: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/lib/src/types.ts:54\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        data\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoginOptions {\n  /**\n   * Is called, after a token has been received and\n   * successfully validated.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onTokenReceived?: (receivedTokens: ReceivedTokens) => void;\n\n  /**\n   * Hook, to validate the received tokens.\n   * Deprecated:  Use property ``tokenValidationHandler`` on OAuthService instead.\n   */\n  validationHandler?: (receivedTokens: ReceivedTokens) => Promise;\n\n  /**\n   * Called when tryLogin detects that the auth server\n   * included an error message into the hash fragment.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onLoginError?: (params: object) => void;\n\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method.\n   */\n  customHashFragment?: string;\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  disableOAuth2StateCheck?: boolean;\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  abstract getItem(key: string): string | null;\n  abstract removeItem(key: string): void;\n  abstract setItem(key: string, data: string): void;\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  idToken: string;\n  accessToken: string;\n  idClaims?: object;\n  state?: string;\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string;\n  idTokenClaims: object;\n  idTokenHeader: object;\n  idTokenClaimsJson: string;\n  idTokenHeaderJson: string;\n  idTokenExpiresAt: number;\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string;\n  token_type: string;\n  expires_in: number;\n  refresh_token: string;\n  scope: string;\n  state?: string;\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string;\n  [key: string]: any;\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string;\n  authorization_endpoint: string;\n  token_endpoint: string;\n  token_endpoint_auth_methods_supported: string[];\n  token_endpoint_auth_signing_alg_values_supported: string[];\n  userinfo_endpoint: string;\n  check_session_iframe: string;\n  end_session_endpoint: string;\n  jwks_uri: string;\n  registration_endpoint: string;\n  scopes_supported: string[];\n  response_types_supported: string[];\n  acr_values_supported: string[];\n  response_modes_supported: string[];\n  grant_types_supported: string[];\n  subject_types_supported: string[];\n  userinfo_signing_alg_values_supported: string[];\n  userinfo_encryption_alg_values_supported: string[];\n  userinfo_encryption_enc_values_supported: string[];\n  id_token_signing_alg_values_supported: string[];\n  id_token_encryption_alg_values_supported: string[];\n  id_token_encryption_enc_values_supported: string[];\n  request_object_signing_alg_values_supported: string[];\n  display_values_supported: string[];\n  claim_types_supported: string[];\n  claims_supported: string[];\n  claims_parameter_supported: boolean;\n  service_documentation: string;\n  ui_locales_supported: string[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthSuccessEvent.html":{"url":"classes/OAuthSuccessEvent.html","title":"class - OAuthSuccessEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthSuccessEvent\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/events.ts\n        \n\n\n            \n                Extends\n            \n            \n                    OAuthEvent\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: EventType, info: any)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/events.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    type\n                                                  \n                                                        \n                                                                    EventType\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    info\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export type EventType =\n  | 'discovery_document_loaded'\n  | 'received_first_token'\n  | 'jwks_load_error'\n  | 'invalid_nonce_in_state'\n  | 'discovery_document_load_error'\n  | 'discovery_document_validation_error'\n  | 'user_profile_loaded'\n  | 'user_profile_load_error'\n  | 'token_received'\n  | 'token_error'\n  | 'token_refreshed'\n  | 'token_refresh_error'\n  | 'silent_refresh_error'\n  | 'silently_refreshed'\n  | 'silent_refresh_timeout'\n  | 'token_validation_error'\n  | 'token_expires'\n  | 'session_changed'\n  | 'session_error'\n  | 'session_terminated'\n  | 'logout';\n\nexport abstract class OAuthEvent {\n  constructor(readonly type: EventType) {}\n}\n\nexport class OAuthSuccessEvent extends OAuthEvent {\n  constructor(type: EventType, readonly info: any = null) {\n    super(type);\n  }\n}\n\nexport class OAuthInfoEvent extends OAuthEvent {\n  constructor(type: EventType, readonly info: any = null) {\n    super(type);\n  }\n}\n\nexport class OAuthErrorEvent extends OAuthEvent {\n  constructor(\n    type: EventType,\n    readonly reason: object,\n    readonly params: object = null\n  ) {\n    super(type);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ParsedIdToken.html":{"url":"interfaces/ParsedIdToken.html","title":"interface - ParsedIdToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ParsedIdToken\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/types.ts\n        \n\n            \n                Description\n            \n            \n                Represents the parsed and validated id_token.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        idToken\n                                \n                                \n                                        idTokenClaims\n                                \n                                \n                                        idTokenClaimsJson\n                                \n                                \n                                        idTokenExpiresAt\n                                \n                                \n                                        idTokenHeader\n                                \n                                \n                                        idTokenHeaderJson\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        idToken\n                                    \n                                \n                                \n                                    \n                                        idToken:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in projects/lib/src/types.ts:72\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenClaims\n                                    \n                                \n                                \n                                    \n                                        idTokenClaims:     object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in projects/lib/src/types.ts:73\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenClaimsJson\n                                    \n                                \n                                \n                                    \n                                        idTokenClaimsJson:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in projects/lib/src/types.ts:75\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenExpiresAt\n                                    \n                                \n                                \n                                    \n                                        idTokenExpiresAt:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in projects/lib/src/types.ts:77\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenHeader\n                                    \n                                \n                                \n                                    \n                                        idTokenHeader:     object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in projects/lib/src/types.ts:74\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenHeaderJson\n                                    \n                                \n                                \n                                    \n                                        idTokenHeaderJson:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in projects/lib/src/types.ts:76\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        export class LoginOptions {\n  /**\n   * Is called, after a token has been received and\n   * successfully validated.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onTokenReceived?: (receivedTokens: ReceivedTokens) => void;\n\n  /**\n   * Hook, to validate the received tokens.\n   * Deprecated:  Use property ``tokenValidationHandler`` on OAuthService instead.\n   */\n  validationHandler?: (receivedTokens: ReceivedTokens) => Promise;\n\n  /**\n   * Called when tryLogin detects that the auth server\n   * included an error message into the hash fragment.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onLoginError?: (params: object) => void;\n\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method.\n   */\n  customHashFragment?: string;\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  disableOAuth2StateCheck?: boolean;\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  abstract getItem(key: string): string | null;\n  abstract removeItem(key: string): void;\n  abstract setItem(key: string, data: string): void;\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  idToken: string;\n  accessToken: string;\n  idClaims?: object;\n  state?: string;\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string;\n  idTokenClaims: object;\n  idTokenHeader: object;\n  idTokenClaimsJson: string;\n  idTokenHeaderJson: string;\n  idTokenExpiresAt: number;\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string;\n  token_type: string;\n  expires_in: number;\n  refresh_token: string;\n  scope: string;\n  state?: string;\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string;\n  [key: string]: any;\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string;\n  authorization_endpoint: string;\n  token_endpoint: string;\n  token_endpoint_auth_methods_supported: string[];\n  token_endpoint_auth_signing_alg_values_supported: string[];\n  userinfo_endpoint: string;\n  check_session_iframe: string;\n  end_session_endpoint: string;\n  jwks_uri: string;\n  registration_endpoint: string;\n  scopes_supported: string[];\n  response_types_supported: string[];\n  acr_values_supported: string[];\n  response_modes_supported: string[];\n  grant_types_supported: string[];\n  subject_types_supported: string[];\n  userinfo_signing_alg_values_supported: string[];\n  userinfo_encryption_alg_values_supported: string[];\n  userinfo_encryption_enc_values_supported: string[];\n  id_token_signing_alg_values_supported: string[];\n  id_token_encryption_alg_values_supported: string[];\n  id_token_encryption_enc_values_supported: string[];\n  request_object_signing_alg_values_supported: string[];\n  display_values_supported: string[];\n  claim_types_supported: string[];\n  claims_supported: string[];\n  claims_parameter_supported: boolean;\n  service_documentation: string;\n  ui_locales_supported: string[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReceivedTokens.html":{"url":"classes/ReceivedTokens.html","title":"class - ReceivedTokens","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReceivedTokens\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/types.ts\n        \n\n            \n                Description\n            \n            \n                Represents the received tokens, the received state\nand the parsed claims from the id-token.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                            \n                                    Optional\n                                idClaims\n                            \n                            \n                                idToken\n                            \n                            \n                                    Optional\n                                state\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accessToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        accessToken:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/lib/src/types.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            idClaims\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        idClaims:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/lib/src/types.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            idToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        idToken:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/lib/src/types.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            state\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        state:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/lib/src/types.ts:65\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoginOptions {\n  /**\n   * Is called, after a token has been received and\n   * successfully validated.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onTokenReceived?: (receivedTokens: ReceivedTokens) => void;\n\n  /**\n   * Hook, to validate the received tokens.\n   * Deprecated:  Use property ``tokenValidationHandler`` on OAuthService instead.\n   */\n  validationHandler?: (receivedTokens: ReceivedTokens) => Promise;\n\n  /**\n   * Called when tryLogin detects that the auth server\n   * included an error message into the hash fragment.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onLoginError?: (params: object) => void;\n\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method.\n   */\n  customHashFragment?: string;\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  disableOAuth2StateCheck?: boolean;\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  abstract getItem(key: string): string | null;\n  abstract removeItem(key: string): void;\n  abstract setItem(key: string, data: string): void;\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  idToken: string;\n  accessToken: string;\n  idClaims?: object;\n  state?: string;\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string;\n  idTokenClaims: object;\n  idTokenHeader: object;\n  idTokenClaimsJson: string;\n  idTokenHeaderJson: string;\n  idTokenExpiresAt: number;\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string;\n  token_type: string;\n  expires_in: number;\n  refresh_token: string;\n  scope: string;\n  state?: string;\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string;\n  [key: string]: any;\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string;\n  authorization_endpoint: string;\n  token_endpoint: string;\n  token_endpoint_auth_methods_supported: string[];\n  token_endpoint_auth_signing_alg_values_supported: string[];\n  userinfo_endpoint: string;\n  check_session_iframe: string;\n  end_session_endpoint: string;\n  jwks_uri: string;\n  registration_endpoint: string;\n  scopes_supported: string[];\n  response_types_supported: string[];\n  acr_values_supported: string[];\n  response_modes_supported: string[];\n  grant_types_supported: string[];\n  subject_types_supported: string[];\n  userinfo_signing_alg_values_supported: string[];\n  userinfo_encryption_alg_values_supported: string[];\n  userinfo_encryption_enc_values_supported: string[];\n  id_token_signing_alg_values_supported: string[];\n  id_token_encryption_alg_values_supported: string[];\n  id_token_encryption_enc_values_supported: string[];\n  request_object_signing_alg_values_supported: string[];\n  display_values_supported: string[];\n  claim_types_supported: string[];\n  claims_supported: string[];\n  claims_parameter_supported: boolean;\n  service_documentation: string;\n  ui_locales_supported: string[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenResponse.html":{"url":"interfaces/TokenResponse.html","title":"interface - TokenResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TokenResponse\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/types.ts\n        \n\n            \n                Description\n            \n            \n                Represents the response from the token endpoint\nhttp://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        access_token\n                                \n                                \n                                        expires_in\n                                \n                                \n                                        refresh_token\n                                \n                                \n                                        scope\n                                \n                                \n                                            Optional\n                                        state\n                                \n                                \n                                        token_type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access_token\n                                    \n                                \n                                \n                                    \n                                        access_token:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in projects/lib/src/types.ts:85\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expires_in\n                                    \n                                \n                                \n                                    \n                                        expires_in:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in projects/lib/src/types.ts:87\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refresh_token\n                                    \n                                \n                                \n                                    \n                                        refresh_token:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in projects/lib/src/types.ts:88\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scope\n                                    \n                                \n                                \n                                    \n                                        scope:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in projects/lib/src/types.ts:89\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                    \n                                \n                                \n                                    \n                                        state:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in projects/lib/src/types.ts:90\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token_type\n                                    \n                                \n                                \n                                    \n                                        token_type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in projects/lib/src/types.ts:86\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        export class LoginOptions {\n  /**\n   * Is called, after a token has been received and\n   * successfully validated.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onTokenReceived?: (receivedTokens: ReceivedTokens) => void;\n\n  /**\n   * Hook, to validate the received tokens.\n   * Deprecated:  Use property ``tokenValidationHandler`` on OAuthService instead.\n   */\n  validationHandler?: (receivedTokens: ReceivedTokens) => Promise;\n\n  /**\n   * Called when tryLogin detects that the auth server\n   * included an error message into the hash fragment.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onLoginError?: (params: object) => void;\n\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method.\n   */\n  customHashFragment?: string;\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  disableOAuth2StateCheck?: boolean;\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  abstract getItem(key: string): string | null;\n  abstract removeItem(key: string): void;\n  abstract setItem(key: string, data: string): void;\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  idToken: string;\n  accessToken: string;\n  idClaims?: object;\n  state?: string;\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string;\n  idTokenClaims: object;\n  idTokenHeader: object;\n  idTokenClaimsJson: string;\n  idTokenHeaderJson: string;\n  idTokenExpiresAt: number;\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string;\n  token_type: string;\n  expires_in: number;\n  refresh_token: string;\n  scope: string;\n  state?: string;\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string;\n  [key: string]: any;\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string;\n  authorization_endpoint: string;\n  token_endpoint: string;\n  token_endpoint_auth_methods_supported: string[];\n  token_endpoint_auth_signing_alg_values_supported: string[];\n  userinfo_endpoint: string;\n  check_session_iframe: string;\n  end_session_endpoint: string;\n  jwks_uri: string;\n  registration_endpoint: string;\n  scopes_supported: string[];\n  response_types_supported: string[];\n  acr_values_supported: string[];\n  response_modes_supported: string[];\n  grant_types_supported: string[];\n  subject_types_supported: string[];\n  userinfo_signing_alg_values_supported: string[];\n  userinfo_encryption_alg_values_supported: string[];\n  userinfo_encryption_enc_values_supported: string[];\n  id_token_signing_alg_values_supported: string[];\n  id_token_encryption_alg_values_supported: string[];\n  id_token_encryption_enc_values_supported: string[];\n  request_object_signing_alg_values_supported: string[];\n  display_values_supported: string[];\n  claim_types_supported: string[];\n  claims_supported: string[];\n  claims_parameter_supported: boolean;\n  service_documentation: string;\n  ui_locales_supported: string[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UrlHelperService.html":{"url":"injectables/UrlHelperService.html","title":"injectable - UrlHelperService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  UrlHelperService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/url-helper.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getHashFragmentParams\n                            \n                            \n                                    Public\n                                parseQueryString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getHashFragmentParams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getHashFragmentParams(customHashFragment?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/lib/src/url-helper.service.ts:5\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        customHashFragment\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     object\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            parseQueryString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        parseQueryString(queryString: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/lib/src/url-helper.service.ts:25\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        queryString\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     object\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class UrlHelperService {\n  public getHashFragmentParams(customHashFragment?: string): object {\n    let hash = customHashFragment || window.location.hash;\n\n    hash = decodeURIComponent(hash);\n\n    if (hash.indexOf('#') !== 0) {\n      return {};\n    }\n\n    let questionMarkPosition = hash.indexOf('?');\n\n    if (questionMarkPosition > -1) {\n      hash = hash.substr(questionMarkPosition + 1);\n    } else {\n      hash = hash.substr(1);\n    }\n\n    return this.parseQueryString(hash);\n  }\n\n  public parseQueryString(queryString: string): object {\n    let data = {},\n      pairs,\n      pair,\n      separatorIndex,\n      escapedKey,\n      escapedValue,\n      key,\n      value;\n\n    if (queryString === null) {\n      return data;\n    }\n\n    pairs = queryString.split('&');\n\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserInfo.html":{"url":"interfaces/UserInfo.html","title":"interface - UserInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserInfo\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/types.ts\n        \n\n            \n                Description\n            \n            \n                Represents the response from the user info endpoint\nhttp://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        sub\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    any\n\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/types.ts:98\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                    \n                                \n                                \n                                    \n                                        sub:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in projects/lib/src/types.ts:98\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        export class LoginOptions {\n  /**\n   * Is called, after a token has been received and\n   * successfully validated.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onTokenReceived?: (receivedTokens: ReceivedTokens) => void;\n\n  /**\n   * Hook, to validate the received tokens.\n   * Deprecated:  Use property ``tokenValidationHandler`` on OAuthService instead.\n   */\n  validationHandler?: (receivedTokens: ReceivedTokens) => Promise;\n\n  /**\n   * Called when tryLogin detects that the auth server\n   * included an error message into the hash fragment.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onLoginError?: (params: object) => void;\n\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method.\n   */\n  customHashFragment?: string;\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  disableOAuth2StateCheck?: boolean;\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  abstract getItem(key: string): string | null;\n  abstract removeItem(key: string): void;\n  abstract setItem(key: string, data: string): void;\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  idToken: string;\n  accessToken: string;\n  idClaims?: object;\n  state?: string;\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string;\n  idTokenClaims: object;\n  idTokenHeader: object;\n  idTokenClaimsJson: string;\n  idTokenHeaderJson: string;\n  idTokenExpiresAt: number;\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string;\n  token_type: string;\n  expires_in: number;\n  refresh_token: string;\n  scope: string;\n  state?: string;\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string;\n  [key: string]: any;\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string;\n  authorization_endpoint: string;\n  token_endpoint: string;\n  token_endpoint_auth_methods_supported: string[];\n  token_endpoint_auth_signing_alg_values_supported: string[];\n  userinfo_endpoint: string;\n  check_session_iframe: string;\n  end_session_endpoint: string;\n  jwks_uri: string;\n  registration_endpoint: string;\n  scopes_supported: string[];\n  response_types_supported: string[];\n  acr_values_supported: string[];\n  response_modes_supported: string[];\n  grant_types_supported: string[];\n  subject_types_supported: string[];\n  userinfo_signing_alg_values_supported: string[];\n  userinfo_encryption_alg_values_supported: string[];\n  userinfo_encryption_enc_values_supported: string[];\n  id_token_signing_alg_values_supported: string[];\n  id_token_encryption_alg_values_supported: string[];\n  id_token_encryption_enc_values_supported: string[];\n  request_object_signing_alg_values_supported: string[];\n  display_values_supported: string[];\n  claim_types_supported: string[];\n  claims_supported: string[];\n  claims_parameter_supported: boolean;\n  service_documentation: string;\n  ui_locales_supported: string[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationHandler.html":{"url":"classes/ValidationHandler.html","title":"class - ValidationHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationHandler\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/token-validation/validation-handler.ts\n        \n\n            \n                Description\n            \n            \n                Interface for Handlers that are hooked in to\nvalidate tokens.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                validateAtHash\n                            \n                            \n                                    \n                                    Public\n                                validateSignature\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                                Public\n                            validateAtHash\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        validateAtHash(validationParams: ValidationParams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/lib/src/token-validation/validation-handler.ts:25\n                            \n                        \n\n                \n                    \n                            Validates the at_hash in an id_token against the received access_token.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validationParams\n                                                        \n                                                                    ValidationParams\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                                Public\n                            validateSignature\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        validateSignature(validationParams: ValidationParams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/lib/src/token-validation/validation-handler.ts:18\n                            \n                        \n\n                \n                    \n                            Validates the signature of an id_token.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validationParams\n                                                        \n                                                                    ValidationParams\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export interface ValidationParams {\n  idToken: string;\n  accessToken: string;\n  idTokenHeader: object;\n  idTokenClaims: object;\n  jwks: object;\n  loadKeys: () => Promise;\n}\n\n/**\n * Interface for Handlers that are hooked in to\n * validate tokens.\n */\nexport abstract class ValidationHandler {\n  /**\n   * Validates the signature of an id_token.\n   */\n  public abstract validateSignature(\n    validationParams: ValidationParams\n  ): Promise;\n\n  /**\n   * Validates the at_hash in an id_token against the received access_token.\n   */\n  public abstract validateAtHash(validationParams: ValidationParams): boolean;\n}\n\n/**\n * This abstract implementation of ValidationHandler already implements\n * the method validateAtHash. However, to make use of it,\n * you have to override the method calcHash.\n */\nexport abstract class AbstractValidationHandler implements ValidationHandler {\n  /**\n   * Validates the signature of an id_token.\n   */\n  abstract validateSignature(validationParams: ValidationParams): Promise;\n\n  /**\n   * Validates the at_hash in an id_token against the received access_token.\n   */\n  validateAtHash(params: ValidationParams): boolean {\n    let hashAlg = this.inferHashAlgorithm(params.idTokenHeader);\n\n    let tokenHash = this.calcHash(params.accessToken, hashAlg); // sha256(accessToken, { asString: true });\n\n    let leftMostHalf = tokenHash.substr(0, tokenHash.length / 2);\n\n    let tokenHashBase64 = btoa(leftMostHalf);\n\n    let atHash = tokenHashBase64\n      .replace(/\\+/g, '-')\n      .replace(/\\//g, '_')\n      .replace(/=/g, '');\n    let claimsAtHash = params.idTokenClaims['at_hash'].replace(/=/g, '');\n\n    if (atHash !== claimsAtHash) {\n      console.error('exptected at_hash: ' + atHash);\n      console.error('actual at_hash: ' + claimsAtHash);\n    }\n\n    return atHash === claimsAtHash;\n  }\n\n  /**\n   * Infers the name of the hash algorithm to use\n   * from the alg field of an id_token.\n   *\n   * @param jwtHeader the id_token's parsed header\n   */\n  protected inferHashAlgorithm(jwtHeader: object): string {\n    let alg: string = jwtHeader['alg'];\n\n    if (!alg.match(/^.S[0-9]{3}$/)) {\n      throw new Error('Algorithm not supported: ' + alg);\n    }\n\n    return 'sha' + alg.substr(2);\n  }\n\n  /**\n   * Calculates the hash for the passed value by using\n   * the passed hash algorithm.\n   *\n   * @param valueToHash\n   * @param algorithm\n   */\n  protected abstract calcHash(valueToHash: string, algorithm: string): string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValidationParams.html":{"url":"interfaces/ValidationParams.html","title":"interface - ValidationParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ValidationParams\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/token-validation/validation-handler.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        accessToken\n                                \n                                \n                                        idToken\n                                \n                                \n                                        idTokenClaims\n                                \n                                \n                                        idTokenHeader\n                                \n                                \n                                        jwks\n                                \n                                \n                                        loadKeys\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                    \n                                \n                                \n                                    \n                                        accessToken:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in projects/lib/src/token-validation/validation-handler.ts:3\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idToken\n                                    \n                                \n                                \n                                    \n                                        idToken:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in projects/lib/src/token-validation/validation-handler.ts:2\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenClaims\n                                    \n                                \n                                \n                                    \n                                        idTokenClaims:     object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in projects/lib/src/token-validation/validation-handler.ts:5\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenHeader\n                                    \n                                \n                                \n                                    \n                                        idTokenHeader:     object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in projects/lib/src/token-validation/validation-handler.ts:4\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwks\n                                    \n                                \n                                \n                                    \n                                        jwks:     object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in projects/lib/src/token-validation/validation-handler.ts:6\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loadKeys\n                                    \n                                \n                                \n                                    \n                                        loadKeys:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in projects/lib/src/token-validation/validation-handler.ts:7\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        export interface ValidationParams {\n  idToken: string;\n  accessToken: string;\n  idTokenHeader: object;\n  idTokenClaims: object;\n  jwks: object;\n  loadKeys: () => Promise;\n}\n\n/**\n * Interface for Handlers that are hooked in to\n * validate tokens.\n */\nexport abstract class ValidationHandler {\n  /**\n   * Validates the signature of an id_token.\n   */\n  public abstract validateSignature(\n    validationParams: ValidationParams\n  ): Promise;\n\n  /**\n   * Validates the at_hash in an id_token against the received access_token.\n   */\n  public abstract validateAtHash(validationParams: ValidationParams): boolean;\n}\n\n/**\n * This abstract implementation of ValidationHandler already implements\n * the method validateAtHash. However, to make use of it,\n * you have to override the method calcHash.\n */\nexport abstract class AbstractValidationHandler implements ValidationHandler {\n  /**\n   * Validates the signature of an id_token.\n   */\n  abstract validateSignature(validationParams: ValidationParams): Promise;\n\n  /**\n   * Validates the at_hash in an id_token against the received access_token.\n   */\n  validateAtHash(params: ValidationParams): boolean {\n    let hashAlg = this.inferHashAlgorithm(params.idTokenHeader);\n\n    let tokenHash = this.calcHash(params.accessToken, hashAlg); // sha256(accessToken, { asString: true });\n\n    let leftMostHalf = tokenHash.substr(0, tokenHash.length / 2);\n\n    let tokenHashBase64 = btoa(leftMostHalf);\n\n    let atHash = tokenHashBase64\n      .replace(/\\+/g, '-')\n      .replace(/\\//g, '_')\n      .replace(/=/g, '');\n    let claimsAtHash = params.idTokenClaims['at_hash'].replace(/=/g, '');\n\n    if (atHash !== claimsAtHash) {\n      console.error('exptected at_hash: ' + atHash);\n      console.error('actual at_hash: ' + claimsAtHash);\n    }\n\n    return atHash === claimsAtHash;\n  }\n\n  /**\n   * Infers the name of the hash algorithm to use\n   * from the alg field of an id_token.\n   *\n   * @param jwtHeader the id_token's parsed header\n   */\n  protected inferHashAlgorithm(jwtHeader: object): string {\n    let alg: string = jwtHeader['alg'];\n\n    if (!alg.match(/^.S[0-9]{3}$/)) {\n      throw new Error('Algorithm not supported: ' + alg);\n    }\n\n    return 'sha' + alg.substr(2);\n  }\n\n  /**\n   * Calculates the hash for the passed value by using\n   * the passed hash algorithm.\n   *\n   * @param valueToHash\n   * @param algorithm\n   */\n  protected abstract calcHash(valueToHash: string, algorithm: string): string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WebHttpUrlEncodingCodec.html":{"url":"classes/WebHttpUrlEncodingCodec.html","title":"class - WebHttpUrlEncodingCodec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  WebHttpUrlEncodingCodec\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/encoder.ts\n        \n\n            \n                Description\n            \n            \n                This custom encoder allows charactes like +, % and / to be used in passwords\n\n            \n\n\n            \n                Implements\n            \n            \n                        HttpParameterCodec\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decodeKey\n                            \n                            \n                                decodeValue\n                            \n                            \n                                encodeKey\n                            \n                            \n                                encodeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            decodeKey\n                            \n                            \n                        \n                    \n                \n                \n                    \ndecodeKey(k: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/lib/src/encoder.ts:14\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        k\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            decodeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \ndecodeValue(v: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/lib/src/encoder.ts:18\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        v\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            encodeKey\n                            \n                            \n                        \n                    \n                \n                \n                    \nencodeKey(k: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/lib/src/encoder.ts:6\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        k\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            encodeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nencodeValue(v: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/lib/src/encoder.ts:10\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        v\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpParameterCodec } from '@angular/common/http';\n/**\n * This custom encoder allows charactes like +, % and / to be used in passwords\n */\nexport class WebHttpUrlEncodingCodec implements HttpParameterCodec {\n  encodeKey(k: string): string {\n    return encodeURIComponent(k);\n  }\n\n  encodeValue(v: string): string {\n    return encodeURIComponent(v);\n  }\n\n  decodeKey(k: string): string {\n    return decodeURIComponent(k);\n  }\n\n  decodeValue(v: string) {\n    return decodeURIComponent(v);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChange Log\nNew Features in Version 3.1\nSee Release Notes\nNew Features in Version 3.0\nSee Release Notes\nNew Features in Version 2.1\n\nNew Config API (the original one is still supported)\nNew convenience methods in OAuthService to streamline default tasks:\nsetupAutomaticSilentRefresh()\nloadDiscoveryDocumentAndTryLogin()\n\n\nSingle Sign out through Session Status Change Notification according to the OpenID Connect Session Management specs. This means, you can be notified when the user logs out using at the login provider.\nPossibility to define the ValidationHandler, the Config as well as the OAuthStorage via DI\nBetter structured documentation\n\nNew Features in Version 2\n\nToken Refresh for Implicit Flow by implementing \"silent refresh\"\nValidating the signature of the received id_token\nProviding Events via the observable events.\nThe event token_expires can be used together with a silent refresh to automatically refresh a token when/ before it expires (see also property timeoutFactor).\n\nBreaking Changes in Version 2\n\nThe property oidc defaults to true.\nIf you are just using oauth2, you have to set oidc to false. Otherwise, the validation of the user profile will fail!\nBy default, sessionStorage is used. To use localStorage call method setStorage\nDemands using https as OIDC and OAuth2 relay on it. This rule can be relaxed using the property requireHttps, e. g. for local testing.\nDemands that every url provided by the discovery document starts with the issuer's url. This can be relaxed by using the property strictDiscoveryDocumentValidation.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 6.0.0\n        \n            @angular/common : 6.0.0\n        \n            @angular/compiler : 6.0.0\n        \n            @angular/core : 6.0.0\n        \n            @angular/elements : 6.0.0\n        \n            @angular/forms : 6.0.0\n        \n            @angular/http : 6.0.0\n        \n            @angular/platform-browser : 6.0.0\n        \n            @angular/platform-browser-dynamic : 6.0.0\n        \n            @angular/router : 6.0.0\n        \n            @webcomponents/custom-elements : ^1.1.0\n        \n            angular-oauth2-oidc : ^2.1.8\n        \n            bootstrap : ^3.3.7\n        \n            core-js : ^2.5.1\n        \n            jsrsasign : ^8.0.12\n        \n            rxjs : 6.1.0\n        \n            rxjs-compat : ^6.0.0-rc.0\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            b64DecodeUnicode   (projects/.../base64-helper.ts)\n                        \n                        \n                            createDefaultStorage   (projects/.../angular-oauth-oidic.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/lib/src/base64-helper.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            b64DecodeUnicode\n                            \n                            \n                        \n                    \n                \n                \n                    \nb64DecodeUnicode(str: )\n                    \n                \n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        str\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    projects/lib/src/angular-oauth-oidic.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createDefaultStorage\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateDefaultStorage()\n                    \n                \n\n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nangular-oauth2-oidc\nSupport for OAuth 2 and OpenId Connect (OIDC) in Angular.\n\nCredits\n\ngenerator-angular2-library for scaffolding an Angular library\njsrasign for validating token signature and for hashing\nIdentity Server (used for testing with an .NET/.NET Core Backend)\nKeycloak (Redhat) for testing with Java\n\nResources\n\nSources and Sample:\nhttps://github.com/manfredsteyer/angular-oauth2-oidc\n\nSource Code Documentation\nhttps://manfredsteyer.github.io/angular-oauth2-oidc/angular-oauth2-oidc/docs/\n\n\nTested Environment\nSuccessfully tested with Angular 4.3+, Angular 5 and its Router, PathLocationStrategy as well as HashLocationStrategy and CommonJS-Bundling via webpack. At server side we've used IdentityServer (.NET/ .NET Core) and Redhat's Keycloak (Java).\nRelease Cycle\n\nOne major release for each Angular version\nWill contain new features\nWill contain bug fixes and PRs\n\n\nCritical Bugfixes on a regular basis\n\nAdditional Features\n\nLogging in via OAuth2 and OpenId Connect (OIDC) Implicit Flow (where user is redirected to Identity Provider)\n\"Logging in\" via Password Flow (where user enters his/her password into the client)\nToken Refresh for Password Flow by using a Refresh Token\nAutomatically refreshing a token when/ some time before it expires\nQuerying Userinfo Endpoint\nQuerying Discovery Document to ease configuration\nValidating claims of the id_token regarding the specs\nHook for further custom validations\nSingle-Sign-Out by redirecting to the auth-server's logout-endpoint\n\nSample-Auth-Server\nYou can use the OIDC-Sample-Server mentioned in the samples for Testing. It assumes, that your Web-App runns on http://localhost:8080.\nUsername/Password: max/geheim\nclientIds: \n\nspa-demo (implicit flow)\ndemo-resource-owner (resource owner password flow)\n\nredirectUris:\n\nlocalhost:[8080-8089|4200-4202]\nlocalhost:[8080-8089|4200-4202]/index.html\nlocalhost:[8080-8089|4200-4202]/silent-refresh.html\n\nInstalling\nnpm i angular-oauth2-oidc --saveImporting the NgModule\nimport { OAuthModule } from 'angular-oauth2-oidc';\n[...]\n\n@NgModule({\n  imports: [ \n    [...]\n    HttpModule,\n    OAuthModule.forRoot()\n  ],\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    [...]\n  ],\n  bootstrap: [\n    AppComponent \n  ]\n})\nexport class AppModule {\n}\nConfiguring for Implicit Flow\nThis section shows how to implement login leveraging implicit flow. This is the OAuth2/OIDC flow best suitable for\nSingle Page Application. It sends the user to the Identity Provider's login page. After logging in, the SPA gets tokens.\nThis also allows for single sign on as well as single sign off.\nTo configure the library the following sample uses the new configuration API introduced with Version 2.1.\nHence, The original API is still supported.\nimport { AuthConfig } from 'angular-oauth2-oidc';\n\nexport const authConfig: AuthConfig = {\n\n  // Url of the Identity Provider\n  issuer: 'https://steyer-identity-server.azurewebsites.net/identity',\n\n  // URL of the SPA to redirect the user to after login\n  redirectUri: window.location.origin + '/index.html',\n\n  // The SPA's id. The SPA is registerd with this id at the auth-server\n  clientId: 'spa-demo',\n\n  // set the scope for the permissions the client should request\n  // The first three are defined by OIDC. The 4th is a usecase-specific one\n  scope: 'openid profile email voucher',\n}Configure the OAuthService with this config object when the application starts up:\nimport { OAuthService } from 'angular-oauth2-oidc';\nimport { JwksValidationHandler } from 'angular-oauth2-oidc';\nimport { authConfig } from './auth.config';\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'flight-app',\n    templateUrl: './app.component.html'\n})\nexport class AppComponent {\n\n    constructor(private oauthService: OAuthService) {\n      this.configureWithNewConfigApi();\n    }\n\n    private configureWithNewConfigApi() {\n      this.oauthService.configure(authConfig);\n      this.oauthService.tokenValidationHandler = new JwksValidationHandler();\n      this.oauthService.loadDiscoveryDocumentAndTryLogin();\n    }\n}Implementing a Login Form\nAfter you've configured the library, you just have to call initImplicitFlow to login using OAuth2/ OIDC.\nimport { Component } from '@angular/core';\nimport { OAuthService } from 'angular-oauth2-oidc';\n\n@Component({\n    templateUrl: \"app/home.html\"\n})\nexport class HomeComponent {\n\n    constructor(private oauthService: OAuthService) {\n    }\n\n    public login() {\n        this.oauthService.initImplicitFlow();\n    }\n\n    public logoff() {\n        this.oauthService.logOut();\n    }\n\n    public get name() {\n        let claims = this.oauthService.getIdentityClaims();\n        if (!claims) return null;\n        return claims.given_name;\n    }\n\n}The following snippet contains the template for the login page:\n\n    Hallo\n\n\n    Hallo, {{name}}\n\n\n\n    Login\n\n\n    Logout\n\n\n\n    Username/Passwort zum Testen: max/geheim\nSkipping the Login Form\nIf you don't want to display a login form that tells the user that they are redirected to the identity server, you can use the convenince function this.oauthService.loadDiscoveryDocumentAndLogin(); instead of this.oauthService.loadDiscoveryDocumentAndTryLogin(); when setting up the library. \nThis directly redirects the user to the identity server if there are no valid tokens. \nCalling a Web API with an Access Token\nPass this Header to the used method of the Http-Service within an Instance of the class Headers:\nvar headers = new Headers({\n    \"Authorization\": \"Bearer \" + this.oauthService.getAccessToken()\n});If you are using the new HttpClient, use the class HttpHeaders instead:\nvar headers = new HttpHeaders({\n    \"Authorization\": \"Bearer \" + this.oauthService.getAccessToken()\n});Since 3.1 you can also automate this task by switching sendAccessToken on and by setting allowedUrls to an array with prefixes for the respective urls. Use lower case for the prefixes.\nOAuthModule.forRoot({\n    resourceServer: {\n        allowedUrls: ['http://www.angular.at/api'],\n        sendAccessToken: true\n    }\n})Routing\nIf you use the PathLocationStrategy (which is on by default) and have a general catch-all-route (path: '**') you should be fine. Otherwise look up the section Routing with the HashStrategy in the documentation.\nMore Documentation\nSee the documentation for more information about this library.\nTutorials\n\nAngular Authentication with OpenID Connect and Okta in 20 Minutes\nAdd Authentication to Your Angular PWA\nBuild an Ionic App with User Authentication\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        OAuthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        2 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        17 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        5 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EventType   (projects/.../events.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/lib/src/events.ts\n    \n        \n            \n                \n                    \n                        \n                        EventType\n                    \n                \n                \n                    \n                        EventType:     \"discovery_document_loaded\" | \"received_first_token\" | \"jwks_load_error\" | \"invalid_nonce_in_state\" | \"discovery_document_load_error\" | \"discovery_document_validation_error\" | \"user_profile_loaded\" | \"user_profile_load_error\" | \"token_received\" | \"token_error\" | \"token_refreshed\" | \"token_refresh_error\" | \"silent_refresh_error\" | \"silently_refreshed\" | \"silent_refresh_timeout\" | \"token_validation_error\" | \"token_expires\" | \"session_changed\" | \"session_error\" | \"session_terminated\" | \"logout\"\n\n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AUTH_CONFIG   (projects/.../tokens.ts)\n                        \n                        \n                            require   (projects/.../jwks-validation-handler.ts)\n                        \n                        \n                            rs   (projects/.../jwks-validation-handler.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/lib/src/tokens.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_CONFIG\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        AUTH_CONFIG:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('AUTH_CONFIG')\n                        \n                    \n\n\n            \n        \n\n    projects/lib/src/token-validation/jwks-validation-handler.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rs:     \n\n                    \n                \n                    \n                        \n                            Default value : require('jsrsasign')\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/getting-started.html":{"url":"additional-documentation/getting-started.html","title":"additional-page - Getting Started","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGetting Started\nPlease find the Getting Started Guide in the README above.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/preserving-state-(like-the-requested-url).html":{"url":"additional-documentation/preserving-state-(like-the-requested-url).html","title":"additional-page - Preserving State (like the Requested URL)","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPreserving State (like the Requested URL)\nWhen calling initImplicitFlow, you can pass an optional state which could be the requested url:\nthis.oauthService.initImplicitFlow('http://www.myurl.com/x/y/z');After login succeeded, you can read this state:\nthis.oauthService.tryLogin({\n    onTokenReceived: (info) => {\n        console.debug('state', info.state);\n    }\n})\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/refreshing-a-token-(silent-refresh).html":{"url":"additional-documentation/refreshing-a-token-(silent-refresh).html","title":"additional-page - Refreshing a Token (Silent Refresh)","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRefreshing a Token when using Implicit Flow (Silent Refresh)\nTo refresh your tokens when using implicit flow you can use a silent refresh. This is a well-known solution that compensates the fact that implicit flow does not allow for issuing a refresh token. It uses a hidden iframe to get another token from the auth-server. When the user is there still logged in (by using a cookie) it will respond without user interaction and provide new tokens.\nTo use this approach, setup a redirect uri for the silent refresh.\nFor this, you can set the property silentRefreshRedirectUri in the config object:\n// This api will come in the next version\n\nimport { AuthConfig } from 'angular-oauth2-oidc';\n\nexport const authConfig: AuthConfig = {\n\n  // Url of the Identity Provider\n  issuer: 'https://steyer-identity-server.azurewebsites.net/identity',\n\n  // URL of the SPA to redirect the user to after login\n  redirectUri: window.location.origin + '/index.html',\n\n  // URL of the SPA to redirect the user after silent refresh\n  silentRefreshRedirectUri: window.location.origin + '/silent-refresh.html',\n\n  // The SPA's id. The SPA is registerd with this id at the auth-server\n  clientId: 'spa-demo',\n\n  // set the scope for the permissions the client should request\n  // The first three are defined by OIDC. The 4th is a usecase-specific one\n  scope: 'openid profile email voucher',\n}As an alternative, you can set the same property directly with the OAuthService:\nthis.oauthService.silentRefreshRedirectUri = window.location.origin + \"/silent-refresh.html\";Please keep in mind that this uri has to be configured at the auth-server too.\nThis file is loaded into the hidden iframe after getting new tokens. Its only task is to send the received tokens to the main application:\n\n\n    \n    parent.postMessage(location.hash, location.origin);\n    \n\nPlease make sure that this file is copied to your output directory by your build task. When using the CLI you can define it as an asset for this. For this, you have to add the following line to the file .angular-cli.json:\n\"assets\": [\n    [...],\n    \"silent-refresh.html\"\n],To perform a silent refresh, just call the following method:\nthis\n    .oauthService\n    .silentRefresh()\n    .then(info => console.debug('refresh ok', info))\n    .catch(err => console.error('refresh error', err));When there is an error in the iframe that prevents the communication with the main application, silentRefresh will give you a timeout. To configure the timespan for this, you can set the property siletRefreshTimeout (msec). The default value is 20.000 (20 seconds).\nAutomatically refreshing a token when/ before it expires\nTo automatically refresh a token when/ some time before it expires, just call the following method after configuring the OAuthService:\nthis.oauthService.setupAutomaticSilentRefresh();By default, this event is fired after 75% of the token's life time is over. You can adjust this factor by setting the property timeoutFactor to a value between 0 and 1. For instance, 0.5 means, that the event is fired after half of the life time is over and 0.33 triggers the event after a third.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/working-with-httpinterceptors.html":{"url":"additional-documentation/working-with-httpinterceptors.html","title":"additional-page - Working with HttpInterceptors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInterceptors\nSince 3.1 the library uses a default HttpInterceptor that takes care about transmitting the access_token to the resource server and about error handling for security related errors (HTTP status codes 401 and 403) received from the resource server. To put in on, just set sendAccessToken to true and set allowedUrls to an array with prefixes for the respective urls. Use lower case for the prefixes:\nOAuthModule.forRoot({\n    resourceServer: {\n        allowedUrls: ['http://www.angular.at/api'],\n        sendAccessToken: true\n    }\n})You can provide an error handler for the urls white listed here by provding a service for the token OAuthResourceServerErrorHandler.\nTo implement such a service, implement the abstract class OAuthResourceServerErrorHandler. The following example shows the default implemantion that just passes the cought error through:\nexport class OAuthNoopResourceServerErrorHandler implements OAuthResourceServerErrorHandler {\n\n    handleError(err: HttpResponse): Observable {\n        return _throw(err);\n    }\n\n}Custom Interceptors\nFeel free to write custom interceptors but keep in mind that injecting the OAuthService into them creates a circular dependency which leads to an error. The easiest way to prevent this is to use the OAuthStorage directly which also provides the access_token:\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { OAuthService, OAuthStorage } from 'angular-oauth2-oidc';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport {Observable} from 'rxjs/Observable';\nimport { OAuthResourceServerErrorHandler } from \"./resource-server-error-handler\";\nimport { OAuthModuleConfig } from \"../oauth-module.config\";\n\nimport 'rxjs/add/operator/catch';\n\n@Injectable()\nexport class DefaultOAuthInterceptor implements HttpInterceptor {\n\n    constructor(\n        private authStorage: OAuthStorage,\n        private errorHandler: OAuthResourceServerErrorHandler,\n        @Optional() private moduleConfig: OAuthModuleConfig\n    ) {\n    }\n\n    private checkUrl(url: string): boolean {\n        let found = this.moduleConfig.resourceServer.allowedUrls.find(u => url.startsWith(u));\n        return !!found;\n    }\n\n    public intercept(req: HttpRequest, next: HttpHandler): Observable> {\n\n        let url = req.url.toLowerCase();\n\n        if (!this.moduleConfig) return next.handle(req);\n        if (!this.moduleConfig.resourceServer) return next.handle(req);\n        if (!this.moduleConfig.resourceServer.allowedUrls) return next.handle(req);\n        if (!this.checkUrl(url)) return next.handle(req);\n\n        let sendAccessToken = this.moduleConfig.resourceServer.sendAccessToken;\n\n        if (sendAccessToken) {\n\n            let token = this.authStorage.getItem('access_token');\n            let header = 'Bearer ' + token;\n\n            let headers = req.headers\n                                .set('Authorization', header);\n\n            req = req.clone({ headers });\n        }\n\n        return next.handle(req).catch(err => this.errorHandler.handleError(err));\n\n    }\n\n}\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/callback-after-login.html":{"url":"additional-documentation/callback-after-login.html","title":"additional-page - Callback after login","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCallback after login\nThere is a callback onTokenReceived, that is called after a successful login. In this case, the lib received the access_token as\nwell as the id_token, if it was requested. If there is an id_token, the lib validated it.\nthis.oauthService.tryLogin({\n    onTokenReceived: context => {\n        //\n        // Output just for purpose of demonstration\n        // Don't try this at home ... ;-)\n        //\n        console.debug(\"logged in\");\n        console.debug(context);\n    }\n});\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/custom-query-parameters.html":{"url":"additional-documentation/custom-query-parameters.html","title":"additional-page - Custom Query Parameters","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCustom Query Parameters\nYou can set the property customQueryParams to a hash with custom parameter that are transmitted when starting implicit flow.\nthis.oauthService.customQueryParams = {\n    'tenant': '4711',\n    'otherParam': 'someValue'\n};\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/events.html":{"url":"additional-documentation/events.html","title":"additional-page - Events","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEvents\nThe library informs you about its tasks and state using events:\nthis.oauthService.events.subscribe(e => {\n    console.debug('oauth/oidc event', e);\n})For a full list of available events see the string based enum in the file events.ts.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/routing-with-the-hashstrategy.html":{"url":"additional-documentation/routing-with-the-hashstrategy.html","title":"additional-page - Routing with the HashStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRouting with the HashStrategy\nIf you are leveraging the LocationStrategy which the Router is using by default, you can skip this section.\nWhen using the HashStrategy for Routing, the Router will override the received hash fragment with the tokens when it performs it initial navigation. This prevents the library from reading them. To avoid this, disable initial navigation when setting up the routes for your root module:\nexport let AppRouterModule = RouterModule.forRoot(APP_ROUTES, {\n    useHash: true,\n    initialNavigation: false\n});After tryLogin did its job, you can manually perform the initial navigation:\nthis.oauthService.tryLogin().then(_ => {\n    this.router.navigate(['/']);\n})Another solution is the use a redirect uri that already contains the initial route. In this case the router will not override it. An example for such a redirect uri is\n    http://localhost:8080/#/home\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/adapt-id_token-validation.html":{"url":"additional-documentation/adapt-id_token-validation.html","title":"additional-page - Adapt id_token Validation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConfigure/ Adapt id_token Validation\nYou can hook in an implementation of the interface TokenValidator to validate the signature of the received id_token and its at_hash property. This packages provides two implementations:\n\nJwksValidationHandler\nNullValidationHandler\n\nThe former one validates the signature against public keys received via the discovery document (property jwks) and the later one skips the validation on client side.\nimport { JwksValidationHandler } from 'angular-oauth2-oidc';\n\n[...]\n\nthis.oauthService.tokenValidationHandler = new JwksValidationHandler();In cases where no ValidationHandler is defined, you receive a warning on the console. This means that the library wants you to explicitly decide on this.\nDependency Injection\nYou can also setup a ValidationHandler by leveraging dependency injection:\n[...]\nproviders: [\n    { provide: ValidationHandler, useClass: JwksValidationHandler },\n],\n[...]\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/session-checks.html":{"url":"additional-documentation/session-checks.html","title":"additional-page - Session Checks","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSession Checks\nBeginning with version 2.1, you can receive a notification when the user signs out with the identity provider.\nThis is implemented as defined by the OpenID Connect Session Management 1.0 spec.\nWhen this option is activated, the library also automatically ends your local session. This means, the current tokens\nare deleted by calling logOut. In addition to that, the library sends a session_terminated event, you can register\nfor to perform a custom action.\nPlease note that this option can only be used when also the identity provider in question supports it.\nConfiguration\nTo activate the session checks that leads to the mentioned notifications, set the configuration property\nsessionChecksEnabled:\nimport { AuthConfig } from 'angular-oauth2-oidc';\n\nexport const authConfig: AuthConfig = {\n  issuer: 'https://steyer-identity-server.azurewebsites.net/identity',\n  redirectUri: window.location.origin + '/index.html',\n  silentRefreshRedirectUri: window.location.origin + '/silent-refresh.html',\n  clientId: 'spa-demo',\n  scope: 'openid profile email voucher',\n\n  // Activate Session Checks:\n  sessionChecksEnabled: true,\n}Events\nTo get notified, you can hook up for the event session_terminated:\nthis.oauthService.events.filter(e => e.type === 'session_terminated').subscribe(e => {\nconsole.debug('Your session has been terminated!');\n})\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/server-side-rendering.html":{"url":"additional-documentation/server-side-rendering.html","title":"additional-page - Server Side Rendering","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nServer Side Rendering\nThere is a great blog post that shows how this library can be used together with server side rendering:\nhttps://medium.com/lankapura/angular-server-side-rendering-for-authenticated-users-a021627fd9d3The sample for this can be found here:\nhttps://github.com/lankaapura/Angular-AspNetCore-Idsvr\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{"url":"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html","title":"additional-page - Configure Library for Implicit Flow without discovery document","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConfigure Library for Implicit Flow (without discovery document)\nWhen you don't have a discovery document, you have to configure more properties manually:\nPlease note that the following sample uses the original config API. For information about the new config API have a look to the project's README above.\n@Component({ ... })\nexport class AppComponent {\n\n  constructor(private oauthService: OAuthService) {\n\n        // Login-Url\n        this.oauthService.loginUrl = \"https://steyer-identity-server.azurewebsites.net/identity/connect/authorize\"; //Id-Provider?\n\n        // URL of the SPA to redirect the user to after login\n        this.oauthService.redirectUri = window.location.origin + \"/index.html\";\n\n        // The SPA's id. Register SPA with this id at the auth-server\n        this.oauthService.clientId = \"spa-demo\";\n\n        // set the scope for the permissions the client should request\n        this.oauthService.scope = \"openid profile email voucher\";\n\n        // Use setStorage to use sessionStorage or another implementation of the TS-type Storage\n        // instead of localStorage\n        this.oauthService.setStorage(sessionStorage);\n\n        // To also enable single-sign-out set the url for your auth-server's logout-endpoint here\n        this.oauthService.logoutUrl = \"https://steyer-identity-server.azurewebsites.net/identity/connect/endsession\";\n\n        // This method just tries to parse the token(s) within the url when\n        // the auth-server redirects the user back to the web-app\n        // It doesn't send the user the the login page\n        this.oauthService.tryLogin();\n\n\n  }\n\n}\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/using-systemjs.html":{"url":"additional-documentation/using-systemjs.html","title":"additional-page - Using SystemJS","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUsing SystemJS\nThanks to Kevin BEAUGRAND for adding this information regarding SystemJS.\nSystem.config({\n...\n meta: {\n            'angular-oauth2-oidc': {\n                deps: ['jsrsasign']\n            },\n        }\n...\n});Also thanks to ppanthony for sharing his SystemJS config:\n'angular-oauth2-oidc': {\n    main: 'angular-oauth2-oidc.umd.js',\n    format: 'cjs',\n    defaultExtension: 'js',\n    map: {\n        'jsrsasign': '/node_modules/jsrsasign/lib/jsrsasign',\n    },\n    meta: {\n        'angular-oauth2-oidc': {\n            deps: ['require','jsrsasign']\n        },\n    }\n}\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/original-config-api.html":{"url":"additional-documentation/original-config-api.html","title":"additional-page - Original Config API","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOriginal Config API\nTo configure the library you just have to set some properties on startup. For this, the following sample uses the constructor of the AppComponent which is called before routing kicks in.\nPlease note that the following sample uses the original config API. For information about the new config API have a look to the project's README above.\n@Component({ ... })\nexport class AppComponent {\n\n  constructor(private oauthService: OAuthService) {\n\n        // URL of the SPA to redirect the user to after login\n        this.oauthService.redirectUri = window.location.origin + \"/index.html\";\n\n        // The SPA's id. The SPA is registerd with this id at the auth-server\n        this.oauthService.clientId = \"spa-demo\";\n\n        // set the scope for the permissions the client should request\n        // The first three are defined by OIDC. The 4th is a usecase-specific one\n        this.oauthService.scope = \"openid profile email voucher\";\n\n        // The name of the auth-server that has to be mentioned within the token\n        this.oauthService.issuer = \"https://steyer-identity-server.azurewebsites.net/identity\";\n\n        // Load Discovery Document and then try to login the user\n        this.oauthService.loadDiscoveryDocument().then(() => {\n\n            // This method just tries to parse the token(s) within the url when\n            // the auth-server redirects the user back to the web-app\n            // It dosn't send the user the the login page\n            this.oauthService.tryLogin();\n\n        });\n\n  }\n\n}\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/using-password-flow.html":{"url":"additional-documentation/using-password-flow.html","title":"additional-page - Using Password Flow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUsing Password-Flow\nThis section shows how to use the password flow, which demands the user to directly enter his or her password into the client.\nPlease note that from an OAuth2/OIDC perspective, the implicit flow is better suited for logging into a SPA and the flow described here should only be used,\nwhen a) there is a strong trust relations ship between the client and the auth server and when b) other flows are not possible.\nConfigure Library for Password Flow (using discovery document)\nTo configure the library you just have to set some properties on startup. For this, the following sample uses the constructor of the AppComponent which is called before routing kicks in.\nPlease not, that this configuration is quite similar to the one for the implcit flow.\n@Component({ ... })\nexport class AppComponent {\n\n  constructor(private oauthService: OAuthService) {\n\n        // The SPA's id. Register SPA with this id at the auth-server\n        this.oauthService.clientId = \"demo-resource-owner\";\n\n        // set the scope for the permissions the client should request\n        // The auth-server used here only returns a refresh token (see below), when the scope offline_access is requested\n        this.oauthService.scope = \"openid profile email voucher offline_access\";\n\n        // Use setStorage to use sessionStorage or another implementation of the TS-type Storage\n        // instead of localStorage\n        this.oauthService.setStorage(sessionStorage);\n\n        // Set a dummy secret\n        // Please note that the auth-server used here demand the client to transmit a client secret, although\n        // the standard explicitly cites that the password flow can also be used without it. Using a client secret\n        // does not make sense for a SPA that runs in the browser. That's why the property is called dummyClientSecret\n        // Using such a dummy secret is as safe as using no secret.\n        this.oauthService.dummyClientSecret = \"geheim\";\n\n        // Load Discovery Document and then try to login the user\n        let url = 'https://steyer-identity-server.azurewebsites.net/identity/.well-known/openid-configuration';\n        this.oauthService.loadDiscoveryDocument(url).then(() => {\n            // Do what ever you want here\n        });\n\n  }\n\n}Configure Library for Password Flow (without discovery document)\nIn cases where you don't have an OIDC based discovery document you have to configure some more properties manually:\n@Component({ ... })\nexport class AppComponent {\n\n  constructor(private oauthService: OAuthService) {\n\n        // Login-Url\n        this.oauthService.tokenEndpoint = \"https://steyer-identity-server.azurewebsites.net/identity/connect/token\";\n\n        // Url with user info endpoint\n        // This endpont is described by OIDC and provides data about the loggin user\n        // This sample uses it, because we don't get an id_token when we use the password flow\n        // If you don't want this lib to fetch data about the user (e. g. id, name, email) you can skip this line\n        this.oauthService.userinfoEndpoint = \"https://steyer-identity-server.azurewebsites.net/identity/connect/userinfo\";\n\n        // The SPA's id. Register SPA with this id at the auth-server\n        this.oauthService.clientId = \"demo-resource-owner\";\n\n        // set the scope for the permissions the client should request\n        this.oauthService.scope = \"openid profile email voucher offline_access\";\n\n        // Set a dummy secret\n        // Please note that the auth-server used here demand the client to transmit a client secret, although\n        // the standard explicitly cites that the password flow can also be used without it. Using a client secret\n        // does not make sense for a SPA that runs in the browser. That's why the property is called dummyClientSecret\n        // Using such a dummy secret is as safe as using no secret.\n        this.oauthService.dummyClientSecret = \"geheim\";\n\n  }\n\n}Fetching an Access Token by providing the current user's credentials\nthis.oauthService.fetchTokenUsingPasswordFlow('max', 'geheim').then((resp) => {\n\n      // Loading data about the user\n      return this.oauthService.loadUserProfile();\n\n}).then(() => {\n\n      // Using the loaded user data\n      let claims = this.oAuthService.getIdentityClaims();\n      if (claims) console.debug('given_name', claims.given_name);\n\n})There is also a short form for fetching the token and loading the user profile:\nthis.oauthService.fetchTokenUsingPasswordFlowAndLoadUserProfile('max', 'geheim').then(() => {\n      let claims = this.oAuthService.getIdentityClaims();\n      if (claims) console.debug('given_name', claims.given_name);\n});Refreshing the current Access Token\nUsing the password flow you MIGHT get a refresh token (which isn't the case with the implicit flow by design!). You can use this token later to get a new access token, e. g. after it expired.\nthis.oauthService.refreshToken().then(() => {\n          console.debug('ok');\n})\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
